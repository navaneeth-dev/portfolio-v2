[["Map",1,2,9,10],"meta::meta",["Map",3,4,5,6,7,8],"astro-version","5.7.14","content-config-digest","1f207e0f778736ca","astro-config-digest","{\"root\":{},\"srcDir\":{},\"publicDir\":{},\"outDir\":{},\"cacheDir\":{},\"site\":\"https://rizexor.com\",\"compressHTML\":true,\"base\":\"/\",\"trailingSlash\":\"ignore\",\"output\":\"static\",\"scopedStyleStrategy\":\"attribute\",\"build\":{\"format\":\"directory\",\"client\":{},\"server\":{},\"assets\":\"_astro\",\"serverEntry\":\"entry.mjs\",\"redirects\":true,\"inlineStylesheets\":\"auto\",\"concurrency\":1},\"server\":{\"open\":false,\"host\":false,\"port\":4321,\"streaming\":true,\"allowedHosts\":[]},\"redirects\":{},\"image\":{\"endpoint\":{\"route\":\"/_image\"},\"service\":{\"entrypoint\":\"astro/assets/services/sharp\",\"config\":{}},\"domains\":[],\"remotePatterns\":[]},\"devToolbar\":{\"enabled\":true},\"markdown\":{\"syntaxHighlight\":\"shiki\",\"shikiConfig\":{\"langs\":[],\"langAlias\":{},\"theme\":\"github-dark\",\"themes\":{},\"wrap\":false,\"transformers\":[]},\"remarkPlugins\":[],\"rehypePlugins\":[null,[null,{\"behavior\":\"append\",\"properties\":{\"class\":\"autolink-header\",\"ariaHidden\":true,\"tabIndex\":-1},\"content\":[{\"type\":\"element\",\"tagName\":\"span\",\"properties\":{\"className\":[\"sr-only\"]},\"children\":[{\"type\":\"text\",\"value\":\" permalink\"}]},{\"type\":\"element\",\"tagName\":\"svg\",\"properties\":{\"className\":[\"inline\",\"ml-2\",\"hover:text-neutral-500\"],\"xmlns\":\"http://www.w3.org/2000/svg\",\"width\":24,\"height\":24,\"fill\":\"currentColor\",\"viewBox\":\"0 0 24 24\"},\"children\":[{\"type\":\"element\",\"tagName\":\"path\",\"properties\":{\"d\":\"M9.199 13.599a5.99 5.99 0 0 0 3.949 2.345 5.987 5.987 0 0 0 5.105-1.702l2.995-2.994a5.992 5.992 0 0 0 1.695-4.285 5.976 5.976 0 0 0-1.831-4.211 5.99 5.99 0 0 0-6.431-1.242 6.003 6.003 0 0 0-1.905 1.24l-1.731 1.721a.999.999 0 1 0 1.41 1.418l1.709-1.699a3.985 3.985 0 0 1 2.761-1.123 3.975 3.975 0 0 1 2.799 1.122 3.997 3.997 0 0 1 .111 5.644l-3.005 3.006a3.982 3.982 0 0 1-3.395 1.126 3.987 3.987 0 0 1-2.632-1.563A1 1 0 0 0 9.201 13.6zm5.602-3.198a5.99 5.99 0 0 0-3.949-2.345 5.987 5.987 0 0 0-5.105 1.702l-2.995 2.994a5.992 5.992 0 0 0-1.695 4.285 5.976 5.976 0 0 0 1.831 4.211 5.99 5.99 0 0 0 6.431 1.242 6.003 6.003 0 0 0 1.905-1.24l1.723-1.723a.999.999 0 1 0-1.414-1.414L9.836 19.81a3.985 3.985 0 0 1-2.761 1.123 3.975 3.975 0 0 1-2.799-1.122 3.997 3.997 0 0 1-.111-5.644l3.005-3.006a3.982 3.982 0 0 1 3.395-1.126 3.987 3.987 0 0 1 2.632 1.563 1 1 0 0 0 1.602-1.198z\"},\"children\":[]}]}]}]],\"remarkRehype\":{},\"gfm\":true,\"smartypants\":true},\"security\":{\"checkOrigin\":true},\"env\":{\"schema\":{},\"validateSecrets\":false},\"experimental\":{\"clientPrerender\":false,\"contentIntellisense\":false,\"responsiveImages\":false,\"headingIdCompat\":false,\"preserveScriptOrder\":false},\"legacy\":{\"collections\":false}}","blog",["Map",11,12,109,110,165,166],"reverse-engineering-a-banking-app",{"id":11,"data":13,"body":24,"filePath":25,"assetImports":26,"digest":50,"rendered":51,"legacyId":108},{"title":14,"description":15,"pubDate":16,"image":17,"tags":18,"isDraft":22,"author":23},"Creating a custom UPI VPA by bypassing advanced anti-reversing techniques in a banking app","A deep dive into the process of generating custom UPI VPAs within a mobile banking app by bypassing security protections. Explore techniques for overcoming anti-reversing and Anti-Frida measures, including native library analysis.",["Date","2025-04-26T18:30:00.000Z"],"/icici.png",[19,20,21],"android","frida","reverse engineering",false,"Navaneeth","**Discussion links:** [r/Magisk](https://www.reddit.com/r/Magisk/comments/1ku2rre/article_creating_custom_upi_vpa_by_bypassing/) | [r/netsec](https://www.reddit.com/r/netsec/comments/1ku2sst/creating_custom_upi_vpa_by_bypassing_protecttai/)\n\n## Takeaway\n\n- Get a custom UPI VPA / UPI ID like `anything@bankxyz`.\n- Learn how to bypass and reverse engineer advanced anti reversing techniques.\n- Learn how to bypass Anti-Frida measures.\n- Learn how to reverse engineering Android native libraries.\n\nMy goal in starting this project was to create custom payment IDs where it would otherwise not have been possible. Advantages of having a short UPI ID include ease of remembering, an inside joke for friend groups and simpler to communicate. So what is a UPI ID?\n\n## UPI\n\nUnified Payments Interface is an Indian instant payment system as well as **protocol** developed by the National Payments Corporation of India (NPCI). Everyone in India use UPI for day to day payments, nobody uses cards for payments.\n\nUPI allows every bank (ICICI, Federal Bank) and third-party apps (GPay, PhonePe) to interact with each other.\n\nSo what is UPI ID? It is an alias for your bank account. In the case of HDFC bank app, we can have one UPI ID link to another bank for example: HDFC UPI ID for Federal Bank. A person can have several UPI IDs, for example one UPI ID for each app.\n\n## Initial analysis\n\nNow that I know we have the ability to choose the UPI IDs, I thought we can intercept the request and change the UPI ID to our desired one. With this I started analyzing the APK. First thing I always do is open JADX-GUI and look at the AndroidManifest.xml and MainActivity. To get the APK I used adb pull.\n\n![AndroidManifest - Finding main activity](../../images/reverse-engineering-icici.png)\n\nThe MainActivity extends `CordovaActivity` which means it's a React Native app, another way to find out if it's a React Native app is to check for the presence of `index.android.bundle`.\n\n![Cordova](../../images/reverse-engineering-icici-cordova.png)\n\n## Attempting to locate Anti-Frida detection \n\nAfter understanding what type of APK I will be dealing with, I started dynamic analysis with Frida so that I can easily verify if I am looking at the correct class from JADX. First thing I noticed after launching the app with Frida is the Frida connection closes immediately.\n\n![Process terminated Frida](../../images/reverse-engineering-icici-proc-term.png)\n\nSo this indicates Anti-Frida techniques. To trace which part of the code the Anti-Frida code is located I started hooking interesting functions which is called early. I used `Thread.sleep(10)` to check if the connection closes after 5 seconds that means the Anti-Frida code was already called before the hook. I also used `frida-trace -j 'CLASS!FUNCTION'` to check if a function is being called in the first place.\n\nAfter doing this for sometime I found that after `System.loadLibrary` is called the connection immediately closes. So this means a native library is doing the Anti-Frida stuff. Also I would always encounter a crash after hooking `System.loadLibrary` because of [this](https://github.com/rovo89/XposedBridge/issues/87):\n\n> This is one of the methods that you shouldn't hook. Have a look at the implementation:Â [https://android.googlesource.com/platform/libcore/+/android-6.0.1_r16/luni/src/main/java/java/lang/System.java#1072](https://android.googlesource.com/platform/libcore/+/android-6.0.1_r16/luni/src/main/java/java/lang/System.java#1072)\n> \n> It uses the class loader of the caller, which is usually the app, but would be Xposed as soon as you hook it. Please hook Runtime.loadLibrary() instead.\n\n![Load Library](../../images/reverse-engineering-icici-load-library.png)\n\nNow while I was running this in an Android 11 emulator I was not able to get the base address of the loaded module via `Process.findModuleByName` (which I was using to check whether the library was loaded fully so I can hook it's functions) but the library was loaded in memory with no module name. I suspect it's because of ARM translation going on and it was doing some sort of manual mapping. The APK only had arm64-v8a native libraries and no x86_64 library which was my emulator's architecture.\n\nSo going forward I did all my testing in my real Android device with MagiskHide turned off otherwise you cannot do early-instrumentation with `frida -U -f \u003Claunch-app>`.\n\nIn my real device I was able to hook `System.loadLibrary` and get the base address of the module right after it's been loaded. Example code:\n\n```js\nJava.perform(function() {\n    const System = Java.use('java.lang.System');\n    const Runtime = Java.use('java.lang.Runtime');\n    const SystemLoad_2 = System.loadLibrary.overload('java.lang.String');\n    const VMStack = Java.use('dalvik.system.VMStack');\n\n    SystemLoad_2.implementation = function(library) {\n        send(\"Loading dynamic library => \" + library);\n        try {\n            const loaded = Runtime.getRuntime().loadLibrary0(VMStack.getCallingClassLoader(), library);\n            if(library === 'libprotecttor-native-lib') {\n\t\t\t\t// hook native lib functions\n            }\n            return loaded;\n        } catch(ex) {\n            console.log(ex);\n        }\n    };\n});\n```\n\n\nNow that we have the ability to hook functions right after the native library is loaded. We can start reverse engineering the native library.\n\n## Protector Company\n\nThe library responsible for closing the Frida connection is `libprotecttor-native-lib.so`, so what is this native library? It is a RunTime Application Self-Protection solution developed by ~~[Censored](https://google.com)~~.\n\nOther native libraries important in XYZ bank app:\n\n| Name                            | Description                        | Hash                                                             |\n| ------------------------------- | ---------------------------------- | ---------------------------------------------------------------- |\n| libprotecttor-native-lib.so     | Main module                        | 124d6b42808c022d675c8eb5e928f2c810e5f5fe73b92fb019c4097f66cdc87d |\n| libapp-protecttor-native-lib.so | Rest of libprotectt, not important | 5ecdc71188e9fa6bc47fa23cd83bcbce95c2805fcc7754b25a275aa291893709 |\n| libnative-lib.so                | Gets API URL, not important        | 84445f13e7a1e39ba70f7ac3faaf5ac75354f0743a81f91b4bb586608c44a487 |\n\n## Extracting native libraries\n\nTo reverse engineer the native library I first have to get the .so files. First I checked the unzipped apk and didn't find any lib folder. After lots of research I found out about split apks and extractNativeLibs.\n\n`android:extractNativeLibs=\"false\"` means the main APK won't store any libraries but will instead store native libraries in architecture specific APKs to save download bandwidth.\n\n![Extract Native Libs False](../../images/reverse-engineering-icici-extract-native-false.png)\n*AndroidManifest.xml*\n\nHow to get split APK?\n\n```bash\n$ adb shell pm path com.csam.xyzbank.bank.imobile\npackage:/data/app/~~UOYiAXaSPBW0Ae8atXOrqg==/com.csam.xyzbank.bank.imobile-SYp1oonK6muaef0keHyLGw==/base.apk\npackage:/data/app/~~UOYiAXaSPBW0Ae8atXOrqg==/com.csam.xyzbank.bank.imobile-SYp1oonK6muaef0keHyLGw==/split_config.arm64_v8a.apk \u003C-- EXTRACT THIS\npackage:/data/app/~~UOYiAXaSPBW0Ae8atXOrqg==/com.csam.xyzbank.bank.imobile-SYp1oonK6muaef0keHyLGw==/split_config.xxhdpi.apk\n```\n\nNow we can just adb pull and the unzipped directory should have the libraries uncompressed.\n\n![Split APK Directory](../../images/reverse-engineering-icici-split-apk-dir.png)\n\n## Reverse engineering Android native libraries\n\nAfter loading `libprotecttor-native-lib.so` binary in IDA, (which I knew from my loadLibrary hook) I jumped into the entry point and found a thread being created with a startRoutine. It always verifies the checksum of the native library.\n\n![Native entry point](../../images/reverse-engineering-icici-native-entry-point.png)\n\nThe startRoutine finally calls the `F1` function which is just an infinite loop that calls two functions if the app is being used. If not it sleeps using the function `nanosleep` and checks again.\n\n![Main Thread](../../images/reverse-engineering-icici-mainThread.png)\n\n### Function 1 reversed\n\nWith the help of ChatGPT I was able to find out what this function does pretty fast. This function checks all thread names of the process via `/proc/self/task/%s/status` if it matches any of these:\n\n- gmain\n- gum-js-loop\n\nIf it does it calls it's exitClause which in turn calls `exit(1)` and does other things which is not very important.\n\nIt also checks if `strstr` or `opendir` has been hooked by comparing bytes with `libc.so` on disk.\n\n```c\n__int64 mwMainThread()\n{\n  ...omitted for brevity\n  v73 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 2)) + 40);\n  v0 = rotMinus2(\"/rtqe/ugnh/vcum==\");\n  dirPtr = opendir(v0);\n  if ( !dirPtr )\n  {\n    if ( check_open()\n      || (v50 = rotMinus2(\"qrgpfkt==\"), checkForFunctionHook(v50)) // opendir\n      || (v51 = rotMinus2(\"uvtuvt==\"), success = checkForFunctionHook(v51), (success & 1) != 0) ) // strstr\n    {\n      __android_log_print(4, \"AppProtectt\", \"G-M..1.1\");\n      v53 = \"et\";\nexitClause:\n      callScanCore(v53);\n      parse_maps_and_change_permissions();\n      exit(1);\n    }\n    goto LABEL_80;\n  }\n  v2 = dirPtr;\n  v3 = readdir(dirPtr);\n  if ( v3 )\n  {\n    v54 = 0;\n    while ( 1 )\n    {\n\t  ...omitted\n      procSelfTaskStatusFmtStr = rotMinus2(\"/rtqe/ugnh/vcum/%u/uvcvwu==\"); // /proc/self/task/%s/status\n      formatStr((__int64)taskSelfFmtBuf, 256LL, 256LL, procSelfTaskStatusFmtStr, v4);\n      v13 = linux_eabi_syscall(__NR_openat, -100, (const char *)taskSelfFmtBuf, 0x80000);\n      if ( v13 )\n      {\n        v14 = buffer;\n\t\t...omitted\n        gumJsLoop = rotMinus2(\"iwo-lu-nqqr==\"); // gum-js-loop\n        gmain = rotMinus2(\"iockp==\");           // gmain\n        v21 = gumJsLoop + 1;\n        if ( !*gumJsLoop )\n          goto gumExitClause;\ngumExitClause:\n          FK[0] = \"GA\";\n          __android_log_print(4, \"AppProtectt\", \"G-M..1\");\n          v53 = \"gum\";\n          goto exitClause;\n        }\n\t\t...\n        close(v13);\n      }\n\t...\n    if ( info1[0] == \"not found\" )\n      info1[0] = \"LEO\";\n  }\n  return success;\n}\n```\n\n### Function 2 reversed\n\nThis function is kinda of similar to the above function but checks if any file descriptor links to linjector. This is not important to Anti-Frida.\n\n```cpp\n__int64 sub_599EC()\n{\n  ...omitted for brevity\n  v52 = *(_QWORD *)(_ReadStatusReg(ARM64_SYSREG(3, 3, 13, 0, 2)) + 40);\n  v0 = rotMinus2(\"/rtqe/ugnh/hf==\"); // /proc/self/fd\n  v1 = opendir(v0);\n  v2 = v1;\n  if ( !v1 )\n  {\n    if ( check_open()\n      || (v27 = rotMinus2(\"qrgpfkt==\"), checkForFunctionHook(v27)) // opendir\n      || (v28 = rotMinus2(\"uvtuvt==\"), checkForFunctionHook(v28)) ) // strstr\n    {\n      __android_log_print(4, \"AppProtectt\", \"L-J..1.1\");\n      v30 = \"et\";\nexitClause:\n      callScanCore(v30);\n      parse_maps_and_change_permissions();\n      exit(1);\n    }\n    goto successClause;\n  }\n  v3 = readdir(v1);\n  if ( v3 )\n  {\n    v4 = v3;\n    v5 = 0;\n    while ( 1 )\n    {\n\t  ...\n      *(_OWORD *)file = 0u;\n      v36 = 0u;\n      v6 = rotMinus2(\"/rtqe/ugnh/hf/%u==\"); // /proc/self/fd/%s\n      formatStr((__int64)file, 256LL, 256LL, v6, v4->d_name);\n      lstat(file, (struct stat *)v31);\n      if ( (v32 & 0xF000) == 40960 )\n      {\n        v7 = linux_eabi_syscall(__NR_readlinkat, -100, file, (char *)v51, 0x100u);\n        linjector = rotMinus2(\"nkplgevqt==\"); // linjector\n        if ( (v5 & 1) == 0 )\n        {\n          pid = getpid();\n          formatStr((__int64)&buf, 32LL, 32LL, \"%s%s%s%d%s\", \"pr\", \"oc\", \"/\", pid, \"/fd\");\n...\nexitClauseParent:\n          FK[0] = \"LFA\";\n          __android_log_print(4, \"AppProtectt\", \"L-J..1\");\n          v30 = \"lin\";\n          goto exitClause;\n        }\n      v4 = readdir(v2);\n...\nsuccessClause:\n    if ( globalStatus == \"not found\" )\n      globalStatus = \"LEO\";\n  }\n  return closedir(v2);\n}\n```\n\n## Bypassing native library checks\n\nWhen checking my phone, I was being detected because Frida creates a gmain thread. There are many ways to bypass this but I just hooked these two functions.\n\nThe way I did that is by hooking  `pthread_create` and after registering the startRoutine hook, I hook the two functions. I just add an offset from the base address because this is a temporary project. After the library is loaded I unhook `pthread_create`.\n\n```js\n    let threadHook = null;\n    const pthread_create_ptr = Module.findExportByName(null, \"pthread_create\");\n    console.log(\"[+] Found pthread_create at: \" + pthread_create_ptr);\n    System.loadLibrary.implementation = function(library) {\n        if (library == \"protectt-native-lib\") {\n            threadHook = Interceptor.attach(pthread_create_ptr, {\n                onEnter: function(args) {\n                    this.threadPtr = args[0];\n                    this.startRoutine = args[2];\n                    this.routineArg = args[3];\n\n                    // Hooking first startRoutine after libprotectt is loaded is enough\n                    if (!hooked) {\n                        const startRoutineHook = Interceptor.replace(this.startRoutine, new NativeCallback(() => {\n                            console.log(\"[+] Thread function started\");\n\n                            var targetModule = Process.findModuleByName(\"libprotectt-native-lib.so\");\n                            if (targetModule) {\n                                const baseAddr = targetModule.base;\n\n                                Interceptor.replace(baseAddr.add(0x59E24), new NativeCallback(() => {\n                                    console.log(\"[+] mainThread Hook\");\n                                }, 'void', []));\n\n                                Interceptor.replace(baseAddr.add(0x599EC), new NativeCallback(() => {\n                                    console.log(\"[+] mainThread2 Hook\");\n                                }, 'void', []));\n                            }\n                        }, 'void', ['pointer']));\n\n                        hooked = true;\n                        threadHook.detach();\n                    }\n                },\n            });\n        }\n\n        Runtime.getRuntime().loadLibrary0(VMStack.getCallingClassLoader(), library);\n        const classLoader = VMStack.getCallingClassLoader();\n\n        if (library == \"protectt-native-lib\" && threadHook) {\n            threadHook.detach();\n            threadHook = null;\n        }\n    };\n```\n\n## Bypassing root detection\n\nWith this I was able to bypass the Anti-Frida detection but now I was getting root detected. \n\n![Root Detection](../../images/reverse-engineering-icici-root-detection.png)\n\nSo I tried searching for the string \"Your Device is rooted. For security reasons...\" in the APK but no results were found. I searched in `/data/data` and `/data/user` still no results.\n\nWith no luck I tried searching for \"Close App\" again no luck. I tried with case insensitive and partial strings like \"Your Device\" etc... Still no luck.\n\nI decided to change my approach and search for Android APIs that exit the app, [Stackoverflow](https://stackoverflow.com/questions/17719634/how-to-exit-an-android-app-programmatically) has a good list.\n\n\n- finishAffinity\n- finishAndRemoveTask\n- getActivity().finish();\n- System.exit(0)\n\nI tried searching for these with JADX code search and found a few interesting functions. It's likely only the main one's are relevant. And we focus our search inside the ai package.\n\n![System.exit functions](../../images/reverse-engineering-icici-system-exit.png)\n\nAfter seeing a few of these functions there is a common function `companion.d()`. It's called by everything that closes the apps. So instead of hooking all the above functions, we can just hook one and get the stacktrace.\n\n![Common code](../../images/reverse-engineering-icici-common.png)\n\nI hook this so I can see what exactly is calling it up the stack. So I can hook the parent function and bypass the root detection. This was by far the hardest part because there is at least 25 functions that need to be traced up the stack using Frida + JADX. I found several ways to bypass ~~Censored~~ but I will be showing part of the process as the actual process is TOO long and I am not able to retrace what I did lol.\n\n```js\nlet a = Java.use(\"protecttor.app.security.main.g$a\");\na[\"d\"].implementation = function () {\n\tconsole.log(`a.d is called`);\n\tlet result = this[\"d\"]();\n\tconsole.log(`a.d result=${result}`);\n\tconsole.log(Java.use(\"android.util.Log\").getStackTraceString(Java.use(\"java.lang.Exception\").$new()))\n\treturn result;\n};\n```\n\nOnce we click \"Close App\" the last stack trace should give us the correct function. \n\n```bash\na.d is called\na.d result=[object Object]\njava.lang.Exception\n        at protecttor.app.security.main.g$a.d(Native Method)\n        at protecttor.app.security.main.scan.ScanAlerts.x(Unknown Source:49)\n        at protecttor.app.security.main.scan.ScanAlerts.V(Unknown Source:11)\n        at protecttor.app.security.main.scan.ScanAlerts.d0(Unknown Source:3)\n        at protecttor.app.security.main.scan.ScanAlerts.f(Unknown Source:0)\n        at protecttor.app.security.main.scan.t.onClick(Unknown Source:4)\n        at android.view.View.performClick(View.java:8028)\n        at android.view.View.performClickInternal(View.java:8005)\n        at android.view.View.-$$Nest$mperformClickInternal(Unknown Source:0)\n        at android.view.View$PerformClick.run(View.java:31233)\n        at android.os.Handler.handleCallback(Handler.java:959)\n        at android.os.Handler.dispatchMessage(Handler.java:100)\n        at android.os.Looper.loopOnce(Looper.java:258)\n        at android.os.Looper.loop(Looper.java:356)\n        at android.app.ActivityThread.main(ActivityThread.java:8837)\n        at java.lang.reflect.Method.invoke(Native Method)\n        at com.android.internal.os.RuntimeInit$MethodAndArgsCaller.run(RuntimeInit.java:598)\n        at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:896)\n```\n\n![](../../images/reverse-engineering-icici-t-click.png)\n\n```\nScanAlerts.U is called: btnBlock=androidx.appcompat.widget.AppCompatButton{6e89fa8 VFED..C.. ......I. 0,0-0,0 #7f0a03a7 app:id/btn_sdk_btn_block}, mBuilder=android.app.AlertDialog@5a\n15ac1, btnIgnore=androidx.appcompat.widget.AppCompatButton{1a0a266 VFED..C.. ......I. 0,0-0,0 #7f0a03a8 app:id/btn_sdk_btn_ignore}, response=Java.Field{                              \n        holder: protecttor.app.security.shouldnotobfuscated.dto.i@3c469a7,                \n        fieldType: 2,                                                                                                                                                                 \n        fieldReturnType: Ljava/lang/String;,                                                                                                                                          \n        value: Your Device is rooted. For security reasons we have stopped the Mobile Banking Services on rooted devices.,                                                            \n}, checkBoxForceAccept=androidx.appcompat.widget.AppCompatCheckBox{fc0e54 GFED..C.. ......I. 0,0-0,0 #7f0a0885 app:id/force_accept}                                                   \n[+] Spoofing adb_enabled to 0 (OFF)                                                                                                                                                   \njava.lang.Exception                                                                                                                                                                   \n        at protecttor.app.security.main.scan.ScanAlerts.U(Native Method)                                                                                                             \n        at protecttor.app.security.main.scan.ScanAlerts.C(Unknown Source:1084)                                                                                                       \n        at protecttor.app.security.main.scan.ScanAlerts.a0(Unknown Source:289)                                                                                                       \n        at protecttor.app.security.main.g.C1(Unknown Source:10)                                                                                                                      \n        at protecttor.app.security.main.g.o(Unknown Source:0)                                                                                                                        \n        at protecttor.app.security.main.c.run(Unknown Source:2)\n        at android.os.Handler.handleCallback(Handler.java:959\n```\n\n![](../../images/reverse-engineering-icici-b1.png)\n\nKeep repeating this process and trying things, you should trace it to a call in `IMOBILE` or `IMobileApplication`. I will now move onto the findings.\n\n![](../../images/reverse-engineering-icici-b1-parent.png)\n\n### IMOBILE.onCreate\n\n`com.csam.xyzbank.bank.imobile.IMOBILE.onCreate` calls `getLoggingStatus`. This function has nothing to do with logging but does security checks, ~~Censored~~ is known to misdirect reverse researchers using fake naming, calling the actual function in an error exception, using decoy functions, among other techniques.\n\n![](../../images/reverse-engineering-icici-oncreate.png)\n\n`getLoggingStatus` is a native function, we have to check all native libraries for this JNI function.\n\n![](../../images/reverse-engineering-icici-get-logging-status.png)\n\nThe function was located in `libnative-lib.so`, IDA shows it calls the function `com.csam.xyzbank.bank.imobile.IMOBILE.logStatus()`.\n\n![](../../images/reverse-engineering-icici-native-logging.png)\n\nHere we finally see `logStatus` calls `log` and in turn calls some security checks.\n\n![](../../images/reverse-engineering-icici-dsgf.png)\n\n### IMOBILE.onResume\n\nWe just need to hook `wVar.m(this, this);` and `protecttor.app.security.common.helper.h0.f1361a.z(this, this)`.\n\n![](../../images/reverse-engineering-icici-onresume-checks.png)\n\n### Root bypass script\n\nThese are all the security checks called from the MainActivity, we want to block everything from the root so it doesn't run in the background or start some `Timer`. Finally putting all the bypasses together we get:\n\n```js\n// Native library calls from IMOBILE.onCreate\nlet IMOBILE = Java.use(\"com.csam.xyzbank.bank.imobile.IMOBILE\");\nIMOBILE[\"logStatus\"].implementation = function () {\n\tconsole.log(`IMOBILE.logStatus is called`);\n};\n\n// ActivityLifecycleCallbacks\nlet LoggerController = Java.use(\"protecttor.app.security.main.LoggerController\");\nLoggerController[\"i\"].implementation = function (context, activity) {\n\tconsole.log(`LoggerController.i is called: context=${context}, activity=${activity}`);\n};\n\n// IMOBILE.onResume Check1\nlet h0 = Java.use(\"protecttor.app.security.common.helper.h0\");\nh0[\"z\"].implementation = function (context, activity) {\nconsole.log(`h0.z is called: context=${context}, activity=${activity}`);\n};\n\n// IMOBILE.onResume Check2\nlet w = Java.use(\"protecttor.app.security.common.helper.w\");\nw[\"m\"].implementation = function (context, activity) {\n\tconsole.log(`w.m is called: context=${context}, activity=${activity}`);\n};\n```\n\n## Finally getting a custom VPA\n\nAfter launching my script with [https://codeshare.frida.re/@akabe1/frida-multiple-unpinning/](https://codeshare.frida.re/@akabe1/frida-multiple-unpinning/) I was able to view the HTTPS traffic. But unfortunately it was encrypted so we can't just modify the request.\n\n![](../../images/reverse-engineering-icici-zap.png)\n\nLets search for the string \"encResponse\" so we can print the strings as it's being encrypted and decrypted. There were only 2 relevant results and one function is a wrapper for the below function so lets hook it. This condition calls `w0` if the JSON has `encResponse`.\n\n![](../../images/reverse-engineering-icici-dsf.png)\n\nw0 calls `com.Discover.Security.a` etc. These are the functions we want to hook. We need to hook all the functions in these classes because which function is chosen is random.\n\n![](../../images/reverse-engineering-icici-truirt.png)\n\nThis above screenshot is only for decryption, so the code I used to hook all encryption and decryption functions is:\n\n```js\nlet a = Java.use(\"com.Discover.Security.a\");\na[\"a\"].implementation = function (textToDecrypt) {\n\tlet result = this[\"a\"](textToDecrypt);\n\tconsole.log(`a.a result=${result}`);\n\treturn result;\n};\na[\"b\"].implementation = function (textToEncrypt) {\n\tconsole.log(`a.b is called: textToEncrypt=${textToEncrypt}`);\n\tlet result = this[\"b\"](textToEncrypt);\n\tconsole.log(`a.b result=${result}`);\n\treturn result;\n};\n\nlet b = Java.use(\"com.Discover.Security.b\");\nb[\"a\"].implementation = function (key, encryptedValue) {\n\tlet result = this[\"a\"](key, encryptedValue);\n\tconsole.log(\"Response\", JSON.stringify(JSON.parse(result), null, 4));\n\treturn result;\n};\nb[\"b\"].implementation = function (key, value) {\n\tconsole.log(`com.Discover.Security.b.b secureString ${key}`);\n\n\tconst json = JSON.parse(value, null, 4);\n\tconsole.log(JSON.stringify(json, null, 4));\n\n\tlet result = this[\"b\"](key, value);\n\treturn result;\n};\n```\n\nNow that we can see the traffic, I wanted to check the JSON sent just before clicking create UPI ID. There is a VPA attribute which we can modify to our desired one. There are many ways to do this but I just hard coded the VPA in my Frida script. Unfortunately no screenshot for this. During my testing a UPI ID of at least 5 characters was required. All you need to do to get a custom UPI ID is modify the above code to this:\n\n```js\nb[\"b\"].implementation = function (key, value) {\n\tconsole.log(`com.Discover.Security.b.b secureString ${key}`);\n\n\tconst json = JSON.parse(value, null, 4);\n\tif (json.VPA === \"upi_id_from_the_list\") {\n\t\tjson.VPA = \"YOUR_DESIRED_ID@bankxyz\";\n\t\tconsole.log(\"CHANGED VPA\");\n\t\tvalue = JSON.stringify(json);\n\t}\n\n\tconsole.log(JSON.stringify(json, null, 4));\n\n\tlet result = this[\"b\"](key, value);\n\treturn result;\n};\n```\n\nAnd voila!\n\n![](../../images/customid.png)","src/content/blog/reverse-engineering-a-banking-app.md",[27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49],"../../images/reverse-engineering-icici.png","../../images/reverse-engineering-icici-cordova.png","../../images/reverse-engineering-icici-proc-term.png","../../images/reverse-engineering-icici-load-library.png","../../images/reverse-engineering-icici-extract-native-false.png","../../images/reverse-engineering-icici-split-apk-dir.png","../../images/reverse-engineering-icici-native-entry-point.png","../../images/reverse-engineering-icici-mainThread.png","../../images/reverse-engineering-icici-root-detection.png","../../images/reverse-engineering-icici-system-exit.png","../../images/reverse-engineering-icici-common.png","../../images/reverse-engineering-icici-t-click.png","../../images/reverse-engineering-icici-b1.png","../../images/reverse-engineering-icici-b1-parent.png","../../images/reverse-engineering-icici-oncreate.png","../../images/reverse-engineering-icici-get-logging-status.png","../../images/reverse-engineering-icici-native-logging.png","../../images/reverse-engineering-icici-dsgf.png","../../images/reverse-engineering-icici-onresume-checks.png","../../images/reverse-engineering-icici-zap.png","../../images/reverse-engineering-icici-dsf.png","../../images/reverse-engineering-icici-truirt.png","../../images/customid.png","ff8c5dade4382f86",{"html":52,"metadata":53},"\u003Cp>\u003Cstrong>Discussion links:\u003C/strong> \u003Ca href=\"https://www.reddit.com/r/Magisk/comments/1ku2rre/article_creating_custom_upi_vpa_by_bypassing/\">r/Magisk\u003C/a> | \u003Ca href=\"https://www.reddit.com/r/netsec/comments/1ku2sst/creating_custom_upi_vpa_by_bypassing_protecttai/\">r/netsec\u003C/a>\u003C/p>\n\u003Ch2 id=\"takeaway\">Takeaway\u003Ca class=\"autolink-header\" aria-hidden=\"\" tabindex=\"-1\" href=\"#takeaway\">\u003Cspan class=\"sr-only\"> permalink\u003C/span>\u003Csvg class=\"inline ml-2 hover:text-neutral-500\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\u003Cpath d=\"M9.199 13.599a5.99 5.99 0 0 0 3.949 2.345 5.987 5.987 0 0 0 5.105-1.702l2.995-2.994a5.992 5.992 0 0 0 1.695-4.285 5.976 5.976 0 0 0-1.831-4.211 5.99 5.99 0 0 0-6.431-1.242 6.003 6.003 0 0 0-1.905 1.24l-1.731 1.721a.999.999 0 1 0 1.41 1.418l1.709-1.699a3.985 3.985 0 0 1 2.761-1.123 3.975 3.975 0 0 1 2.799 1.122 3.997 3.997 0 0 1 .111 5.644l-3.005 3.006a3.982 3.982 0 0 1-3.395 1.126 3.987 3.987 0 0 1-2.632-1.563A1 1 0 0 0 9.201 13.6zm5.602-3.198a5.99 5.99 0 0 0-3.949-2.345 5.987 5.987 0 0 0-5.105 1.702l-2.995 2.994a5.992 5.992 0 0 0-1.695 4.285 5.976 5.976 0 0 0 1.831 4.211 5.99 5.99 0 0 0 6.431 1.242 6.003 6.003 0 0 0 1.905-1.24l1.723-1.723a.999.999 0 1 0-1.414-1.414L9.836 19.81a3.985 3.985 0 0 1-2.761 1.123 3.975 3.975 0 0 1-2.799-1.122 3.997 3.997 0 0 1-.111-5.644l3.005-3.006a3.982 3.982 0 0 1 3.395-1.126 3.987 3.987 0 0 1 2.632 1.563 1 1 0 0 0 1.602-1.198z\">\u003C/path>\u003C/svg>\u003C/a>\u003C/h2>\n\u003Cul>\n\u003Cli>Get a custom UPI VPA / UPI ID like \u003Ccode>anything@bankxyz\u003C/code>.\u003C/li>\n\u003Cli>Learn how to bypass and reverse engineer advanced anti reversing techniques.\u003C/li>\n\u003Cli>Learn how to bypass Anti-Frida measures.\u003C/li>\n\u003Cli>Learn how to reverse engineering Android native libraries.\u003C/li>\n\u003C/ul>\n\u003Cp>My goal in starting this project was to create custom payment IDs where it would otherwise not have been possible. Advantages of having a short UPI ID include ease of remembering, an inside joke for friend groups and simpler to communicate. So what is a UPI ID?\u003C/p>\n\u003Ch2 id=\"upi\">UPI\u003Ca class=\"autolink-header\" aria-hidden=\"\" tabindex=\"-1\" href=\"#upi\">\u003Cspan class=\"sr-only\"> permalink\u003C/span>\u003Csvg class=\"inline ml-2 hover:text-neutral-500\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\u003Cpath d=\"M9.199 13.599a5.99 5.99 0 0 0 3.949 2.345 5.987 5.987 0 0 0 5.105-1.702l2.995-2.994a5.992 5.992 0 0 0 1.695-4.285 5.976 5.976 0 0 0-1.831-4.211 5.99 5.99 0 0 0-6.431-1.242 6.003 6.003 0 0 0-1.905 1.24l-1.731 1.721a.999.999 0 1 0 1.41 1.418l1.709-1.699a3.985 3.985 0 0 1 2.761-1.123 3.975 3.975 0 0 1 2.799 1.122 3.997 3.997 0 0 1 .111 5.644l-3.005 3.006a3.982 3.982 0 0 1-3.395 1.126 3.987 3.987 0 0 1-2.632-1.563A1 1 0 0 0 9.201 13.6zm5.602-3.198a5.99 5.99 0 0 0-3.949-2.345 5.987 5.987 0 0 0-5.105 1.702l-2.995 2.994a5.992 5.992 0 0 0-1.695 4.285 5.976 5.976 0 0 0 1.831 4.211 5.99 5.99 0 0 0 6.431 1.242 6.003 6.003 0 0 0 1.905-1.24l1.723-1.723a.999.999 0 1 0-1.414-1.414L9.836 19.81a3.985 3.985 0 0 1-2.761 1.123 3.975 3.975 0 0 1-2.799-1.122 3.997 3.997 0 0 1-.111-5.644l3.005-3.006a3.982 3.982 0 0 1 3.395-1.126 3.987 3.987 0 0 1 2.632 1.563 1 1 0 0 0 1.602-1.198z\">\u003C/path>\u003C/svg>\u003C/a>\u003C/h2>\n\u003Cp>Unified Payments Interface is an Indian instant payment system as well as \u003Cstrong>protocol\u003C/strong> developed by the National Payments Corporation of India (NPCI). Everyone in India use UPI for day to day payments, nobody uses cards for payments.\u003C/p>\n\u003Cp>UPI allows every bank (ICICI, Federal Bank) and third-party apps (GPay, PhonePe) to interact with each other.\u003C/p>\n\u003Cp>So what is UPI ID? It is an alias for your bank account. In the case of HDFC bank app, we can have one UPI ID link to another bank for example: HDFC UPI ID for Federal Bank. A person can have several UPI IDs, for example one UPI ID for each app.\u003C/p>\n\u003Ch2 id=\"initial-analysis\">Initial analysis\u003Ca class=\"autolink-header\" aria-hidden=\"\" tabindex=\"-1\" href=\"#initial-analysis\">\u003Cspan class=\"sr-only\"> permalink\u003C/span>\u003Csvg class=\"inline ml-2 hover:text-neutral-500\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\u003Cpath d=\"M9.199 13.599a5.99 5.99 0 0 0 3.949 2.345 5.987 5.987 0 0 0 5.105-1.702l2.995-2.994a5.992 5.992 0 0 0 1.695-4.285 5.976 5.976 0 0 0-1.831-4.211 5.99 5.99 0 0 0-6.431-1.242 6.003 6.003 0 0 0-1.905 1.24l-1.731 1.721a.999.999 0 1 0 1.41 1.418l1.709-1.699a3.985 3.985 0 0 1 2.761-1.123 3.975 3.975 0 0 1 2.799 1.122 3.997 3.997 0 0 1 .111 5.644l-3.005 3.006a3.982 3.982 0 0 1-3.395 1.126 3.987 3.987 0 0 1-2.632-1.563A1 1 0 0 0 9.201 13.6zm5.602-3.198a5.99 5.99 0 0 0-3.949-2.345 5.987 5.987 0 0 0-5.105 1.702l-2.995 2.994a5.992 5.992 0 0 0-1.695 4.285 5.976 5.976 0 0 0 1.831 4.211 5.99 5.99 0 0 0 6.431 1.242 6.003 6.003 0 0 0 1.905-1.24l1.723-1.723a.999.999 0 1 0-1.414-1.414L9.836 19.81a3.985 3.985 0 0 1-2.761 1.123 3.975 3.975 0 0 1-2.799-1.122 3.997 3.997 0 0 1-.111-5.644l3.005-3.006a3.982 3.982 0 0 1 3.395-1.126 3.987 3.987 0 0 1 2.632 1.563 1 1 0 0 0 1.602-1.198z\">\u003C/path>\u003C/svg>\u003C/a>\u003C/h2>\n\u003Cp>Now that I know we have the ability to choose the UPI IDs, I thought we can intercept the request and change the UPI ID to our desired one. With this I started analyzing the APK. First thing I always do is open JADX-GUI and look at the AndroidManifest.xml and MainActivity. To get the APK I used adb pull.\u003C/p>\n\u003Cp>\u003Cimg __ASTRO_IMAGE_=\"{&#x22;src&#x22;:&#x22;../../images/reverse-engineering-icici.png&#x22;,&#x22;alt&#x22;:&#x22;AndroidManifest - Finding main activity&#x22;,&#x22;index&#x22;:0}\">\u003C/p>\n\u003Cp>The MainActivity extends \u003Ccode>CordovaActivity\u003C/code> which means itâs a React Native app, another way to find out if itâs a React Native app is to check for the presence of \u003Ccode>index.android.bundle\u003C/code>.\u003C/p>\n\u003Cp>\u003Cimg __ASTRO_IMAGE_=\"{&#x22;src&#x22;:&#x22;../../images/reverse-engineering-icici-cordova.png&#x22;,&#x22;alt&#x22;:&#x22;Cordova&#x22;,&#x22;index&#x22;:0}\">\u003C/p>\n\u003Ch2 id=\"attempting-to-locate-anti-frida-detection\">Attempting to locate Anti-Frida detection\u003Ca class=\"autolink-header\" aria-hidden=\"\" tabindex=\"-1\" href=\"#attempting-to-locate-anti-frida-detection\">\u003Cspan class=\"sr-only\"> permalink\u003C/span>\u003Csvg class=\"inline ml-2 hover:text-neutral-500\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\u003Cpath d=\"M9.199 13.599a5.99 5.99 0 0 0 3.949 2.345 5.987 5.987 0 0 0 5.105-1.702l2.995-2.994a5.992 5.992 0 0 0 1.695-4.285 5.976 5.976 0 0 0-1.831-4.211 5.99 5.99 0 0 0-6.431-1.242 6.003 6.003 0 0 0-1.905 1.24l-1.731 1.721a.999.999 0 1 0 1.41 1.418l1.709-1.699a3.985 3.985 0 0 1 2.761-1.123 3.975 3.975 0 0 1 2.799 1.122 3.997 3.997 0 0 1 .111 5.644l-3.005 3.006a3.982 3.982 0 0 1-3.395 1.126 3.987 3.987 0 0 1-2.632-1.563A1 1 0 0 0 9.201 13.6zm5.602-3.198a5.99 5.99 0 0 0-3.949-2.345 5.987 5.987 0 0 0-5.105 1.702l-2.995 2.994a5.992 5.992 0 0 0-1.695 4.285 5.976 5.976 0 0 0 1.831 4.211 5.99 5.99 0 0 0 6.431 1.242 6.003 6.003 0 0 0 1.905-1.24l1.723-1.723a.999.999 0 1 0-1.414-1.414L9.836 19.81a3.985 3.985 0 0 1-2.761 1.123 3.975 3.975 0 0 1-2.799-1.122 3.997 3.997 0 0 1-.111-5.644l3.005-3.006a3.982 3.982 0 0 1 3.395-1.126 3.987 3.987 0 0 1 2.632 1.563 1 1 0 0 0 1.602-1.198z\">\u003C/path>\u003C/svg>\u003C/a>\u003C/h2>\n\u003Cp>After understanding what type of APK I will be dealing with, I started dynamic analysis with Frida so that I can easily verify if I am looking at the correct class from JADX. First thing I noticed after launching the app with Frida is the Frida connection closes immediately.\u003C/p>\n\u003Cp>\u003Cimg __ASTRO_IMAGE_=\"{&#x22;src&#x22;:&#x22;../../images/reverse-engineering-icici-proc-term.png&#x22;,&#x22;alt&#x22;:&#x22;Process terminated Frida&#x22;,&#x22;index&#x22;:0}\">\u003C/p>\n\u003Cp>So this indicates Anti-Frida techniques. To trace which part of the code the Anti-Frida code is located I started hooking interesting functions which is called early. I used \u003Ccode>Thread.sleep(10)\u003C/code> to check if the connection closes after 5 seconds that means the Anti-Frida code was already called before the hook. I also used \u003Ccode>frida-trace -j 'CLASS!FUNCTION'\u003C/code> to check if a function is being called in the first place.\u003C/p>\n\u003Cp>After doing this for sometime I found that after \u003Ccode>System.loadLibrary\u003C/code> is called the connection immediately closes. So this means a native library is doing the Anti-Frida stuff. Also I would always encounter a crash after hooking \u003Ccode>System.loadLibrary\u003C/code> because of \u003Ca href=\"https://github.com/rovo89/XposedBridge/issues/87\">this\u003C/a>:\u003C/p>\n\u003Cblockquote>\n\u003Cp>This is one of the methods that you shouldnât hook. Have a look at the implementation:Â \u003Ca href=\"https://android.googlesource.com/platform/libcore/+/android-6.0.1_r16/luni/src/main/java/java/lang/System.java#1072\">https://android.googlesource.com/platform/libcore/+/android-6.0.1_r16/luni/src/main/java/java/lang/System.java#1072\u003C/a>\u003C/p>\n\u003Cp>It uses the class loader of the caller, which is usually the app, but would be Xposed as soon as you hook it. Please hook Runtime.loadLibrary() instead.\u003C/p>\n\u003C/blockquote>\n\u003Cp>\u003Cimg __ASTRO_IMAGE_=\"{&#x22;src&#x22;:&#x22;../../images/reverse-engineering-icici-load-library.png&#x22;,&#x22;alt&#x22;:&#x22;Load Library&#x22;,&#x22;index&#x22;:0}\">\u003C/p>\n\u003Cp>Now while I was running this in an Android 11 emulator I was not able to get the base address of the loaded module via \u003Ccode>Process.findModuleByName\u003C/code> (which I was using to check whether the library was loaded fully so I can hook itâs functions) but the library was loaded in memory with no module name. I suspect itâs because of ARM translation going on and it was doing some sort of manual mapping. The APK only had arm64-v8a native libraries and no x86_64 library which was my emulatorâs architecture.\u003C/p>\n\u003Cp>So going forward I did all my testing in my real Android device with MagiskHide turned off otherwise you cannot do early-instrumentation with \u003Ccode>frida -U -f &#x3C;launch-app>\u003C/code>.\u003C/p>\n\u003Cp>In my real device I was able to hook \u003Ccode>System.loadLibrary\u003C/code> and get the base address of the module right after itâs been loaded. Example code:\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"js\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">Java.\u003C/span>\u003Cspan style=\"color:#B392F0\">perform\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#F97583\">function\u003C/span>\u003Cspan style=\"color:#E1E4E8\">() {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    const\u003C/span>\u003Cspan style=\"color:#79B8FF\"> System\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> Java.\u003C/span>\u003Cspan style=\"color:#B392F0\">use\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'java.lang.System'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    const\u003C/span>\u003Cspan style=\"color:#79B8FF\"> Runtime\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> Java.\u003C/span>\u003Cspan style=\"color:#B392F0\">use\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'java.lang.Runtime'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    const\u003C/span>\u003Cspan style=\"color:#79B8FF\"> SystemLoad_2\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> System.loadLibrary.\u003C/span>\u003Cspan style=\"color:#B392F0\">overload\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'java.lang.String'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    const\u003C/span>\u003Cspan style=\"color:#79B8FF\"> VMStack\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> Java.\u003C/span>\u003Cspan style=\"color:#B392F0\">use\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'dalvik.system.VMStack'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    SystemLoad_2.\u003C/span>\u003Cspan style=\"color:#B392F0\">implementation\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#F97583\"> function\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#FFAB70\">library\u003C/span>\u003Cspan style=\"color:#E1E4E8\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">        send\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"Loading dynamic library => \"\u003C/span>\u003Cspan style=\"color:#F97583\"> +\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> library);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">        try\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">            const\u003C/span>\u003Cspan style=\"color:#79B8FF\"> loaded\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> Runtime.\u003C/span>\u003Cspan style=\"color:#B392F0\">getRuntime\u003C/span>\u003Cspan style=\"color:#E1E4E8\">().\u003C/span>\u003Cspan style=\"color:#B392F0\">loadLibrary0\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(VMStack.\u003C/span>\u003Cspan style=\"color:#B392F0\">getCallingClassLoader\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(), library);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">            if\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(library \u003C/span>\u003Cspan style=\"color:#F97583\">===\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> 'libprotecttor-native-lib'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">\t\t\t\t// hook native lib functions\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">            }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">            return\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> loaded;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        } \u003C/span>\u003Cspan style=\"color:#F97583\">catch\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(ex) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">            console.\u003C/span>\u003Cspan style=\"color:#B392F0\">log\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(ex);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    };\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">});\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>Now that we have the ability to hook functions right after the native library is loaded. We can start reverse engineering the native library.\u003C/p>\n\u003Ch2 id=\"protector-company\">Protector Company\u003Ca class=\"autolink-header\" aria-hidden=\"\" tabindex=\"-1\" href=\"#protector-company\">\u003Cspan class=\"sr-only\"> permalink\u003C/span>\u003Csvg class=\"inline ml-2 hover:text-neutral-500\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\u003Cpath d=\"M9.199 13.599a5.99 5.99 0 0 0 3.949 2.345 5.987 5.987 0 0 0 5.105-1.702l2.995-2.994a5.992 5.992 0 0 0 1.695-4.285 5.976 5.976 0 0 0-1.831-4.211 5.99 5.99 0 0 0-6.431-1.242 6.003 6.003 0 0 0-1.905 1.24l-1.731 1.721a.999.999 0 1 0 1.41 1.418l1.709-1.699a3.985 3.985 0 0 1 2.761-1.123 3.975 3.975 0 0 1 2.799 1.122 3.997 3.997 0 0 1 .111 5.644l-3.005 3.006a3.982 3.982 0 0 1-3.395 1.126 3.987 3.987 0 0 1-2.632-1.563A1 1 0 0 0 9.201 13.6zm5.602-3.198a5.99 5.99 0 0 0-3.949-2.345 5.987 5.987 0 0 0-5.105 1.702l-2.995 2.994a5.992 5.992 0 0 0-1.695 4.285 5.976 5.976 0 0 0 1.831 4.211 5.99 5.99 0 0 0 6.431 1.242 6.003 6.003 0 0 0 1.905-1.24l1.723-1.723a.999.999 0 1 0-1.414-1.414L9.836 19.81a3.985 3.985 0 0 1-2.761 1.123 3.975 3.975 0 0 1-2.799-1.122 3.997 3.997 0 0 1-.111-5.644l3.005-3.006a3.982 3.982 0 0 1 3.395-1.126 3.987 3.987 0 0 1 2.632 1.563 1 1 0 0 0 1.602-1.198z\">\u003C/path>\u003C/svg>\u003C/a>\u003C/h2>\n\u003Cp>The library responsible for closing the Frida connection is \u003Ccode>libprotecttor-native-lib.so\u003C/code>, so what is this native library? It is a RunTime Application Self-Protection solution developed by \u003Cdel>\u003Ca href=\"https://google.com\">Censored\u003C/a>\u003C/del>.\u003C/p>\n\u003Cp>Other native libraries important in XYZ bank app:\u003C/p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003Ctable>\u003Cthead>\u003Ctr>\u003Cth>Name\u003C/th>\u003Cth>Description\u003C/th>\u003Cth>Hash\u003C/th>\u003C/tr>\u003C/thead>\u003Ctbody>\u003Ctr>\u003Ctd>libprotecttor-native-lib.so\u003C/td>\u003Ctd>Main module\u003C/td>\u003Ctd>124d6b42808c022d675c8eb5e928f2c810e5f5fe73b92fb019c4097f66cdc87d\u003C/td>\u003C/tr>\u003Ctr>\u003Ctd>libapp-protecttor-native-lib.so\u003C/td>\u003Ctd>Rest of libprotectt, not important\u003C/td>\u003Ctd>5ecdc71188e9fa6bc47fa23cd83bcbce95c2805fcc7754b25a275aa291893709\u003C/td>\u003C/tr>\u003Ctr>\u003Ctd>libnative-lib.so\u003C/td>\u003Ctd>Gets API URL, not important\u003C/td>\u003Ctd>84445f13e7a1e39ba70f7ac3faaf5ac75354f0743a81f91b4bb586608c44a487\u003C/td>\u003C/tr>\u003C/tbody>\u003C/table>\n\u003Ch2 id=\"extracting-native-libraries\">Extracting native libraries\u003Ca class=\"autolink-header\" aria-hidden=\"\" tabindex=\"-1\" href=\"#extracting-native-libraries\">\u003Cspan class=\"sr-only\"> permalink\u003C/span>\u003Csvg class=\"inline ml-2 hover:text-neutral-500\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\u003Cpath d=\"M9.199 13.599a5.99 5.99 0 0 0 3.949 2.345 5.987 5.987 0 0 0 5.105-1.702l2.995-2.994a5.992 5.992 0 0 0 1.695-4.285 5.976 5.976 0 0 0-1.831-4.211 5.99 5.99 0 0 0-6.431-1.242 6.003 6.003 0 0 0-1.905 1.24l-1.731 1.721a.999.999 0 1 0 1.41 1.418l1.709-1.699a3.985 3.985 0 0 1 2.761-1.123 3.975 3.975 0 0 1 2.799 1.122 3.997 3.997 0 0 1 .111 5.644l-3.005 3.006a3.982 3.982 0 0 1-3.395 1.126 3.987 3.987 0 0 1-2.632-1.563A1 1 0 0 0 9.201 13.6zm5.602-3.198a5.99 5.99 0 0 0-3.949-2.345 5.987 5.987 0 0 0-5.105 1.702l-2.995 2.994a5.992 5.992 0 0 0-1.695 4.285 5.976 5.976 0 0 0 1.831 4.211 5.99 5.99 0 0 0 6.431 1.242 6.003 6.003 0 0 0 1.905-1.24l1.723-1.723a.999.999 0 1 0-1.414-1.414L9.836 19.81a3.985 3.985 0 0 1-2.761 1.123 3.975 3.975 0 0 1-2.799-1.122 3.997 3.997 0 0 1-.111-5.644l3.005-3.006a3.982 3.982 0 0 1 3.395-1.126 3.987 3.987 0 0 1 2.632 1.563 1 1 0 0 0 1.602-1.198z\">\u003C/path>\u003C/svg>\u003C/a>\u003C/h2>\n\u003Cp>To reverse engineer the native library I first have to get the .so files. First I checked the unzipped apk and didnât find any lib folder. After lots of research I found out about split apks and extractNativeLibs.\u003C/p>\n\u003Cp>\u003Ccode>android:extractNativeLibs=\"false\"\u003C/code> means the main APK wonât store any libraries but will instead store native libraries in architecture specific APKs to save download bandwidth.\u003C/p>\n\u003Cp>\u003Cimg __ASTRO_IMAGE_=\"{&#x22;src&#x22;:&#x22;../../images/reverse-engineering-icici-extract-native-false.png&#x22;,&#x22;alt&#x22;:&#x22;Extract Native Libs False&#x22;,&#x22;index&#x22;:0}\">\n\u003Cem>AndroidManifest.xml\u003C/em>\u003C/p>\n\u003Cp>How to get split APK?\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"bash\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">$\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> adb\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> shell\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> pm\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> path\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> com.csam.xyzbank.bank.imobile\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">package:/data/app/~~UOYiAXaSPBW0Ae8atXOrqg\u003C/span>\u003Cspan style=\"color:#9ECBFF\">==/com.csam.xyzbank.bank.imobile-SYp1oonK6muaef0keHyLGw==/base.apk\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">package:/data/app/~~UOYiAXaSPBW0Ae8atXOrqg\u003C/span>\u003Cspan style=\"color:#9ECBFF\">==/com.csam.xyzbank.bank.imobile-SYp1oonK6muaef0keHyLGw==/split_config.arm64_v8a.apk\u003C/span>\u003Cspan style=\"color:#F97583\"> &#x3C;\u003C/span>\u003Cspan style=\"color:#9ECBFF\">--\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> EXTRACT\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> THIS\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">package:/data/app/~~UOYiAXaSPBW0Ae8atXOrqg\u003C/span>\u003Cspan style=\"color:#9ECBFF\">==/com.csam.xyzbank.bank.imobile-SYp1oonK6muaef0keHyLGw==/split_config.xxhdpi.apk\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>Now we can just adb pull and the unzipped directory should have the libraries uncompressed.\u003C/p>\n\u003Cp>\u003Cimg __ASTRO_IMAGE_=\"{&#x22;src&#x22;:&#x22;../../images/reverse-engineering-icici-split-apk-dir.png&#x22;,&#x22;alt&#x22;:&#x22;Split APK Directory&#x22;,&#x22;index&#x22;:0}\">\u003C/p>\n\u003Ch2 id=\"reverse-engineering-android-native-libraries\">Reverse engineering Android native libraries\u003Ca class=\"autolink-header\" aria-hidden=\"\" tabindex=\"-1\" href=\"#reverse-engineering-android-native-libraries\">\u003Cspan class=\"sr-only\"> permalink\u003C/span>\u003Csvg class=\"inline ml-2 hover:text-neutral-500\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\u003Cpath d=\"M9.199 13.599a5.99 5.99 0 0 0 3.949 2.345 5.987 5.987 0 0 0 5.105-1.702l2.995-2.994a5.992 5.992 0 0 0 1.695-4.285 5.976 5.976 0 0 0-1.831-4.211 5.99 5.99 0 0 0-6.431-1.242 6.003 6.003 0 0 0-1.905 1.24l-1.731 1.721a.999.999 0 1 0 1.41 1.418l1.709-1.699a3.985 3.985 0 0 1 2.761-1.123 3.975 3.975 0 0 1 2.799 1.122 3.997 3.997 0 0 1 .111 5.644l-3.005 3.006a3.982 3.982 0 0 1-3.395 1.126 3.987 3.987 0 0 1-2.632-1.563A1 1 0 0 0 9.201 13.6zm5.602-3.198a5.99 5.99 0 0 0-3.949-2.345 5.987 5.987 0 0 0-5.105 1.702l-2.995 2.994a5.992 5.992 0 0 0-1.695 4.285 5.976 5.976 0 0 0 1.831 4.211 5.99 5.99 0 0 0 6.431 1.242 6.003 6.003 0 0 0 1.905-1.24l1.723-1.723a.999.999 0 1 0-1.414-1.414L9.836 19.81a3.985 3.985 0 0 1-2.761 1.123 3.975 3.975 0 0 1-2.799-1.122 3.997 3.997 0 0 1-.111-5.644l3.005-3.006a3.982 3.982 0 0 1 3.395-1.126 3.987 3.987 0 0 1 2.632 1.563 1 1 0 0 0 1.602-1.198z\">\u003C/path>\u003C/svg>\u003C/a>\u003C/h2>\n\u003Cp>After loading \u003Ccode>libprotecttor-native-lib.so\u003C/code> binary in IDA, (which I knew from my loadLibrary hook) I jumped into the entry point and found a thread being created with a startRoutine. It always verifies the checksum of the native library.\u003C/p>\n\u003Cp>\u003Cimg __ASTRO_IMAGE_=\"{&#x22;src&#x22;:&#x22;../../images/reverse-engineering-icici-native-entry-point.png&#x22;,&#x22;alt&#x22;:&#x22;Native entry point&#x22;,&#x22;index&#x22;:0}\">\u003C/p>\n\u003Cp>The startRoutine finally calls the \u003Ccode>F1\u003C/code> function which is just an infinite loop that calls two functions if the app is being used. If not it sleeps using the function \u003Ccode>nanosleep\u003C/code> and checks again.\u003C/p>\n\u003Cp>\u003Cimg __ASTRO_IMAGE_=\"{&#x22;src&#x22;:&#x22;../../images/reverse-engineering-icici-mainThread.png&#x22;,&#x22;alt&#x22;:&#x22;Main Thread&#x22;,&#x22;index&#x22;:0}\">\u003C/p>\n\u003Ch3 id=\"function-1-reversed\">Function 1 reversed\u003Ca class=\"autolink-header\" aria-hidden=\"\" tabindex=\"-1\" href=\"#function-1-reversed\">\u003Cspan class=\"sr-only\"> permalink\u003C/span>\u003Csvg class=\"inline ml-2 hover:text-neutral-500\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\u003Cpath d=\"M9.199 13.599a5.99 5.99 0 0 0 3.949 2.345 5.987 5.987 0 0 0 5.105-1.702l2.995-2.994a5.992 5.992 0 0 0 1.695-4.285 5.976 5.976 0 0 0-1.831-4.211 5.99 5.99 0 0 0-6.431-1.242 6.003 6.003 0 0 0-1.905 1.24l-1.731 1.721a.999.999 0 1 0 1.41 1.418l1.709-1.699a3.985 3.985 0 0 1 2.761-1.123 3.975 3.975 0 0 1 2.799 1.122 3.997 3.997 0 0 1 .111 5.644l-3.005 3.006a3.982 3.982 0 0 1-3.395 1.126 3.987 3.987 0 0 1-2.632-1.563A1 1 0 0 0 9.201 13.6zm5.602-3.198a5.99 5.99 0 0 0-3.949-2.345 5.987 5.987 0 0 0-5.105 1.702l-2.995 2.994a5.992 5.992 0 0 0-1.695 4.285 5.976 5.976 0 0 0 1.831 4.211 5.99 5.99 0 0 0 6.431 1.242 6.003 6.003 0 0 0 1.905-1.24l1.723-1.723a.999.999 0 1 0-1.414-1.414L9.836 19.81a3.985 3.985 0 0 1-2.761 1.123 3.975 3.975 0 0 1-2.799-1.122 3.997 3.997 0 0 1-.111-5.644l3.005-3.006a3.982 3.982 0 0 1 3.395-1.126 3.987 3.987 0 0 1 2.632 1.563 1 1 0 0 0 1.602-1.198z\">\u003C/path>\u003C/svg>\u003C/a>\u003C/h3>\n\u003Cp>With the help of ChatGPT I was able to find out what this function does pretty fast. This function checks all thread names of the process via \u003Ccode>/proc/self/task/%s/status\u003C/code> if it matches any of these:\u003C/p>\n\u003Cul>\n\u003Cli>gmain\u003C/li>\n\u003Cli>gum-js-loop\u003C/li>\n\u003C/ul>\n\u003Cp>If it does it calls itâs exitClause which in turn calls \u003Ccode>exit(1)\u003C/code> and does other things which is not very important.\u003C/p>\n\u003Cp>It also checks if \u003Ccode>strstr\u003C/code> or \u003Ccode>opendir\u003C/code> has been hooked by comparing bytes with \u003Ccode>libc.so\u003C/code> on disk.\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"c\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">__int64 \u003C/span>\u003Cspan style=\"color:#B392F0\">mwMainThread\u003C/span>\u003Cspan style=\"color:#E1E4E8\">()\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">{\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  ...omitted \u003C/span>\u003Cspan style=\"color:#F97583\">for\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> brevity\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  v73 \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#F97583\"> *\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(_QWORD \u003C/span>\u003Cspan style=\"color:#F97583\">*\u003C/span>\u003Cspan style=\"color:#E1E4E8\">)(\u003C/span>\u003Cspan style=\"color:#B392F0\">_ReadStatusReg\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#B392F0\">ARM64_SYSREG\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#79B8FF\">3\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#79B8FF\">3\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#79B8FF\">13\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#79B8FF\">0\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#79B8FF\">2\u003C/span>\u003Cspan style=\"color:#E1E4E8\">)) \u003C/span>\u003Cspan style=\"color:#F97583\">+\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 40\u003C/span>\u003Cspan style=\"color:#E1E4E8\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  v0 \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#B392F0\"> rotMinus2\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"/rtqe/ugnh/vcum==\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  dirPtr \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#B392F0\"> opendir\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(v0);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">  if\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> ( \u003C/span>\u003Cspan style=\"color:#F97583\">!\u003C/span>\u003Cspan style=\"color:#E1E4E8\">dirPtr )\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    if\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> ( \u003C/span>\u003Cspan style=\"color:#B392F0\">check_open\u003C/span>\u003Cspan style=\"color:#E1E4E8\">()\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">      ||\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> (v50 \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#B392F0\"> rotMinus2\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"qrgpfkt==\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">), \u003C/span>\u003Cspan style=\"color:#B392F0\">checkForFunctionHook\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(v50))\u003C/span>\u003Cspan style=\"color:#6A737D\"> // opendir\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">      ||\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> (v51 \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#B392F0\"> rotMinus2\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"uvtuvt==\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">), success \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#B392F0\"> checkForFunctionHook\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(v51), (success \u003C/span>\u003Cspan style=\"color:#F97583\">&#x26;\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 1\u003C/span>\u003Cspan style=\"color:#E1E4E8\">) \u003C/span>\u003Cspan style=\"color:#F97583\">!=\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 0\u003C/span>\u003Cspan style=\"color:#E1E4E8\">) )\u003C/span>\u003Cspan style=\"color:#6A737D\"> // strstr\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">      __android_log_print\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#79B8FF\">4\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"AppProtectt\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"G-M..1.1\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">      v53 \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \"et\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">exitClause:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">      callScanCore\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(v53);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">      parse_maps_and_change_permissions\u003C/span>\u003Cspan style=\"color:#E1E4E8\">();\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">      exit\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#79B8FF\">1\u003C/span>\u003Cspan style=\"color:#E1E4E8\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    goto\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> LABEL_80;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  v2 \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> dirPtr;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  v3 \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#B392F0\"> readdir\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(dirPtr);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">  if\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> ( v3 )\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    v54 \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 0\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    while\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> ( \u003C/span>\u003Cspan style=\"color:#79B8FF\">1\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> )\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">\t  ...omitted\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">      procSelfTaskStatusFmtStr \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#B392F0\"> rotMinus2\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"/rtqe/ugnh/vcum/\u003C/span>\u003Cspan style=\"color:#79B8FF\">%u\u003C/span>\u003Cspan style=\"color:#9ECBFF\">/uvcvwu==\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">);\u003C/span>\u003Cspan style=\"color:#6A737D\"> // /proc/self/task/%s/status\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">      formatStr\u003C/span>\u003Cspan style=\"color:#E1E4E8\">((__int64)taskSelfFmtBuf, \u003C/span>\u003Cspan style=\"color:#79B8FF\">256\u003C/span>\u003Cspan style=\"color:#F97583\">LL\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#79B8FF\">256\u003C/span>\u003Cspan style=\"color:#F97583\">LL\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, procSelfTaskStatusFmtStr, v4);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">      v13 \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#B392F0\"> linux_eabi_syscall\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(__NR_openat, \u003C/span>\u003Cspan style=\"color:#F97583\">-\u003C/span>\u003Cspan style=\"color:#79B8FF\">100\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, (\u003C/span>\u003Cspan style=\"color:#F97583\">const\u003C/span>\u003Cspan style=\"color:#F97583\"> char\u003C/span>\u003Cspan style=\"color:#F97583\"> *\u003C/span>\u003Cspan style=\"color:#E1E4E8\">)taskSelfFmtBuf, \u003C/span>\u003Cspan style=\"color:#F97583\">0x\u003C/span>\u003Cspan style=\"color:#79B8FF\">80000\u003C/span>\u003Cspan style=\"color:#E1E4E8\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">      if\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> ( v13 )\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">      {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        v14 \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> buffer;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">\t\t...omitted\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        gumJsLoop \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#B392F0\"> rotMinus2\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"iwo-lu-nqqr==\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">);\u003C/span>\u003Cspan style=\"color:#6A737D\"> // gum-js-loop\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        gmain \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#B392F0\"> rotMinus2\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"iockp==\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">);\u003C/span>\u003Cspan style=\"color:#6A737D\">           // gmain\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        v21 \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> gumJsLoop \u003C/span>\u003Cspan style=\"color:#F97583\">+\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 1\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">        if\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> ( \u003C/span>\u003Cspan style=\"color:#F97583\">!*\u003C/span>\u003Cspan style=\"color:#E1E4E8\">gumJsLoop )\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">          goto\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> gumExitClause;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">gumExitClause:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FFAB70\">          FK\u003C/span>\u003Cspan style=\"color:#E1E4E8\">[\u003C/span>\u003Cspan style=\"color:#79B8FF\">0\u003C/span>\u003Cspan style=\"color:#E1E4E8\">] \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \"GA\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">          __android_log_print\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#79B8FF\">4\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"AppProtectt\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"G-M..1\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">          v53 \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \"gum\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">          goto\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> exitClause;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">\t\t...\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">        close\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(v13);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">      }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">\t...\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    if\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> ( \u003C/span>\u003Cspan style=\"color:#FFAB70\">info1\u003C/span>\u003Cspan style=\"color:#E1E4E8\">[\u003C/span>\u003Cspan style=\"color:#79B8FF\">0\u003C/span>\u003Cspan style=\"color:#E1E4E8\">] \u003C/span>\u003Cspan style=\"color:#F97583\">==\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \"not found\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> )\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FFAB70\">      info1\u003C/span>\u003Cspan style=\"color:#E1E4E8\">[\u003C/span>\u003Cspan style=\"color:#79B8FF\">0\u003C/span>\u003Cspan style=\"color:#E1E4E8\">] \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \"LEO\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">  return\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> success;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch3 id=\"function-2-reversed\">Function 2 reversed\u003Ca class=\"autolink-header\" aria-hidden=\"\" tabindex=\"-1\" href=\"#function-2-reversed\">\u003Cspan class=\"sr-only\"> permalink\u003C/span>\u003Csvg class=\"inline ml-2 hover:text-neutral-500\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\u003Cpath d=\"M9.199 13.599a5.99 5.99 0 0 0 3.949 2.345 5.987 5.987 0 0 0 5.105-1.702l2.995-2.994a5.992 5.992 0 0 0 1.695-4.285 5.976 5.976 0 0 0-1.831-4.211 5.99 5.99 0 0 0-6.431-1.242 6.003 6.003 0 0 0-1.905 1.24l-1.731 1.721a.999.999 0 1 0 1.41 1.418l1.709-1.699a3.985 3.985 0 0 1 2.761-1.123 3.975 3.975 0 0 1 2.799 1.122 3.997 3.997 0 0 1 .111 5.644l-3.005 3.006a3.982 3.982 0 0 1-3.395 1.126 3.987 3.987 0 0 1-2.632-1.563A1 1 0 0 0 9.201 13.6zm5.602-3.198a5.99 5.99 0 0 0-3.949-2.345 5.987 5.987 0 0 0-5.105 1.702l-2.995 2.994a5.992 5.992 0 0 0-1.695 4.285 5.976 5.976 0 0 0 1.831 4.211 5.99 5.99 0 0 0 6.431 1.242 6.003 6.003 0 0 0 1.905-1.24l1.723-1.723a.999.999 0 1 0-1.414-1.414L9.836 19.81a3.985 3.985 0 0 1-2.761 1.123 3.975 3.975 0 0 1-2.799-1.122 3.997 3.997 0 0 1-.111-5.644l3.005-3.006a3.982 3.982 0 0 1 3.395-1.126 3.987 3.987 0 0 1 2.632 1.563 1 1 0 0 0 1.602-1.198z\">\u003C/path>\u003C/svg>\u003C/a>\u003C/h3>\n\u003Cp>This function is kinda of similar to the above function but checks if any file descriptor links to linjector. This is not important to Anti-Frida.\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"cpp\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">__int64\u003C/span>\u003Cspan style=\"color:#B392F0\"> sub_599EC\u003C/span>\u003Cspan style=\"color:#E1E4E8\">()\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">{\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  ...omitted \u003C/span>\u003Cspan style=\"color:#F97583\">for\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> brevity\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  v52 \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#F97583\"> *\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(_QWORD \u003C/span>\u003Cspan style=\"color:#F97583\">*\u003C/span>\u003Cspan style=\"color:#E1E4E8\">)(\u003C/span>\u003Cspan style=\"color:#B392F0\">_ReadStatusReg\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#B392F0\">ARM64_SYSREG\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#79B8FF\">3\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#79B8FF\">3\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#79B8FF\">13\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#79B8FF\">0\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#79B8FF\">2\u003C/span>\u003Cspan style=\"color:#E1E4E8\">)) \u003C/span>\u003Cspan style=\"color:#F97583\">+\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 40\u003C/span>\u003Cspan style=\"color:#E1E4E8\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  v0 \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#B392F0\"> rotMinus2\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"/rtqe/ugnh/hf==\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">);\u003C/span>\u003Cspan style=\"color:#6A737D\"> // /proc/self/fd\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  v1 \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#B392F0\"> opendir\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(v0);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  v2 \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> v1;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">  if\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> ( \u003C/span>\u003Cspan style=\"color:#F97583\">!\u003C/span>\u003Cspan style=\"color:#E1E4E8\">v1 )\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    if\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> ( \u003C/span>\u003Cspan style=\"color:#B392F0\">check_open\u003C/span>\u003Cspan style=\"color:#E1E4E8\">()\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">      ||\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> (v27 \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#B392F0\"> rotMinus2\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"qrgpfkt==\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">), \u003C/span>\u003Cspan style=\"color:#B392F0\">checkForFunctionHook\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(v27))\u003C/span>\u003Cspan style=\"color:#6A737D\"> // opendir\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">      ||\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> (v28 \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#B392F0\"> rotMinus2\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"uvtuvt==\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">), \u003C/span>\u003Cspan style=\"color:#B392F0\">checkForFunctionHook\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(v28)) )\u003C/span>\u003Cspan style=\"color:#6A737D\"> // strstr\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">      __android_log_print\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#79B8FF\">4\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"AppProtectt\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"L-J..1.1\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">      v30 \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \"et\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">exitClause\u003C/span>\u003Cspan style=\"color:#E1E4E8\">:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">      callScanCore\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(v30);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">      parse_maps_and_change_permissions\u003C/span>\u003Cspan style=\"color:#E1E4E8\">();\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">      exit\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#79B8FF\">1\u003C/span>\u003Cspan style=\"color:#E1E4E8\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    goto\u003C/span>\u003Cspan style=\"color:#B392F0\"> successClause\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  v3 \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#B392F0\"> readdir\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(v1);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">  if\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> ( v3 )\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    v4 \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> v3;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    v5 \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 0\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    while\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> ( \u003C/span>\u003Cspan style=\"color:#79B8FF\">1\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> )\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">\t  ...\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">      *\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(_OWORD \u003C/span>\u003Cspan style=\"color:#F97583\">*\u003C/span>\u003Cspan style=\"color:#E1E4E8\">)file \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 0\u003C/span>\u003Cspan style=\"color:#F97583\">u\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">      v36 \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 0\u003C/span>\u003Cspan style=\"color:#F97583\">u\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">      v6 \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#B392F0\"> rotMinus2\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"/rtqe/ugnh/hf/\u003C/span>\u003Cspan style=\"color:#79B8FF\">%u\u003C/span>\u003Cspan style=\"color:#9ECBFF\">==\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">);\u003C/span>\u003Cspan style=\"color:#6A737D\"> // /proc/self/fd/%s\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">      formatStr\u003C/span>\u003Cspan style=\"color:#E1E4E8\">((__int64)file, \u003C/span>\u003Cspan style=\"color:#79B8FF\">256\u003C/span>\u003Cspan style=\"color:#F97583\">LL\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#79B8FF\">256\u003C/span>\u003Cspan style=\"color:#F97583\">LL\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, v6, v4->d_name);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">      lstat\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(file, (\u003C/span>\u003Cspan style=\"color:#F97583\">struct\u003C/span>\u003Cspan style=\"color:#B392F0\"> stat\u003C/span>\u003Cspan style=\"color:#F97583\"> *\u003C/span>\u003Cspan style=\"color:#E1E4E8\">)v31);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">      if\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> ( (v32 \u003C/span>\u003Cspan style=\"color:#F97583\">&#x26;\u003C/span>\u003Cspan style=\"color:#F97583\"> 0x\u003C/span>\u003Cspan style=\"color:#79B8FF\">F000\u003C/span>\u003Cspan style=\"color:#E1E4E8\">) \u003C/span>\u003Cspan style=\"color:#F97583\">==\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 40960\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> )\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">      {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        v7 \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#B392F0\"> linux_eabi_syscall\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(__NR_readlinkat, \u003C/span>\u003Cspan style=\"color:#F97583\">-\u003C/span>\u003Cspan style=\"color:#79B8FF\">100\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, file, (\u003C/span>\u003Cspan style=\"color:#F97583\">char\u003C/span>\u003Cspan style=\"color:#F97583\"> *\u003C/span>\u003Cspan style=\"color:#E1E4E8\">)v51, \u003C/span>\u003Cspan style=\"color:#F97583\">0x\u003C/span>\u003Cspan style=\"color:#79B8FF\">100\u003C/span>\u003Cspan style=\"color:#F97583\">u\u003C/span>\u003Cspan style=\"color:#E1E4E8\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        linjector \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#B392F0\"> rotMinus2\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"nkplgevqt==\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">);\u003C/span>\u003Cspan style=\"color:#6A737D\"> // linjector\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">        if\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> ( (v5 \u003C/span>\u003Cspan style=\"color:#F97583\">&#x26;\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 1\u003C/span>\u003Cspan style=\"color:#E1E4E8\">) \u003C/span>\u003Cspan style=\"color:#F97583\">==\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 0\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> )\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">          pid \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#B392F0\"> getpid\u003C/span>\u003Cspan style=\"color:#E1E4E8\">();\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">          formatStr\u003C/span>\u003Cspan style=\"color:#E1E4E8\">((__int64)\u003C/span>\u003Cspan style=\"color:#F97583\">&#x26;\u003C/span>\u003Cspan style=\"color:#E1E4E8\">buf, \u003C/span>\u003Cspan style=\"color:#79B8FF\">32\u003C/span>\u003Cspan style=\"color:#F97583\">LL\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#79B8FF\">32\u003C/span>\u003Cspan style=\"color:#F97583\">LL\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"\u003C/span>\u003Cspan style=\"color:#79B8FF\">%s%s%s%d%s\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"pr\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"oc\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"/\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, pid, \u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"/fd\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">...\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">exitClauseParent\u003C/span>\u003Cspan style=\"color:#E1E4E8\">:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">          FK[\u003C/span>\u003Cspan style=\"color:#79B8FF\">0\u003C/span>\u003Cspan style=\"color:#E1E4E8\">] \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \"LFA\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">          __android_log_print\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#79B8FF\">4\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"AppProtectt\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"L-J..1\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">          v30 \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \"lin\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">          goto\u003C/span>\u003Cspan style=\"color:#B392F0\"> exitClause\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">      v4 \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#B392F0\"> readdir\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(v2);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">...\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">successClause\u003C/span>\u003Cspan style=\"color:#E1E4E8\">:\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    if\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> ( globalStatus \u003C/span>\u003Cspan style=\"color:#F97583\">==\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \"not found\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> )\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">      globalStatus \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \"LEO\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">  return\u003C/span>\u003Cspan style=\"color:#B392F0\"> closedir\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(v2);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch2 id=\"bypassing-native-library-checks\">Bypassing native library checks\u003Ca class=\"autolink-header\" aria-hidden=\"\" tabindex=\"-1\" href=\"#bypassing-native-library-checks\">\u003Cspan class=\"sr-only\"> permalink\u003C/span>\u003Csvg class=\"inline ml-2 hover:text-neutral-500\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\u003Cpath d=\"M9.199 13.599a5.99 5.99 0 0 0 3.949 2.345 5.987 5.987 0 0 0 5.105-1.702l2.995-2.994a5.992 5.992 0 0 0 1.695-4.285 5.976 5.976 0 0 0-1.831-4.211 5.99 5.99 0 0 0-6.431-1.242 6.003 6.003 0 0 0-1.905 1.24l-1.731 1.721a.999.999 0 1 0 1.41 1.418l1.709-1.699a3.985 3.985 0 0 1 2.761-1.123 3.975 3.975 0 0 1 2.799 1.122 3.997 3.997 0 0 1 .111 5.644l-3.005 3.006a3.982 3.982 0 0 1-3.395 1.126 3.987 3.987 0 0 1-2.632-1.563A1 1 0 0 0 9.201 13.6zm5.602-3.198a5.99 5.99 0 0 0-3.949-2.345 5.987 5.987 0 0 0-5.105 1.702l-2.995 2.994a5.992 5.992 0 0 0-1.695 4.285 5.976 5.976 0 0 0 1.831 4.211 5.99 5.99 0 0 0 6.431 1.242 6.003 6.003 0 0 0 1.905-1.24l1.723-1.723a.999.999 0 1 0-1.414-1.414L9.836 19.81a3.985 3.985 0 0 1-2.761 1.123 3.975 3.975 0 0 1-2.799-1.122 3.997 3.997 0 0 1-.111-5.644l3.005-3.006a3.982 3.982 0 0 1 3.395-1.126 3.987 3.987 0 0 1 2.632 1.563 1 1 0 0 0 1.602-1.198z\">\u003C/path>\u003C/svg>\u003C/a>\u003C/h2>\n\u003Cp>When checking my phone, I was being detected because Frida creates a gmain thread. There are many ways to bypass this but I just hooked these two functions.\u003C/p>\n\u003Cp>The way I did that is by hooking  \u003Ccode>pthread_create\u003C/code> and after registering the startRoutine hook, I hook the two functions. I just add an offset from the base address because this is a temporary project. After the library is loaded I unhook \u003Ccode>pthread_create\u003C/code>.\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"js\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    let\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> threadHook \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#79B8FF\"> null\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    const\u003C/span>\u003Cspan style=\"color:#79B8FF\"> pthread_create_ptr\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> Module.\u003C/span>\u003Cspan style=\"color:#B392F0\">findExportByName\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#79B8FF\">null\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"pthread_create\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    console.\u003C/span>\u003Cspan style=\"color:#B392F0\">log\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"[+] Found pthread_create at: \"\u003C/span>\u003Cspan style=\"color:#F97583\"> +\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> pthread_create_ptr);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    System.loadLibrary.\u003C/span>\u003Cspan style=\"color:#B392F0\">implementation\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#F97583\"> function\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#FFAB70\">library\u003C/span>\u003Cspan style=\"color:#E1E4E8\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">        if\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> (library \u003C/span>\u003Cspan style=\"color:#F97583\">==\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \"protectt-native-lib\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">            threadHook \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> Interceptor.\u003C/span>\u003Cspan style=\"color:#B392F0\">attach\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(pthread_create_ptr, {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">                onEnter\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: \u003C/span>\u003Cspan style=\"color:#F97583\">function\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#FFAB70\">args\u003C/span>\u003Cspan style=\"color:#E1E4E8\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">                    this\u003C/span>\u003Cspan style=\"color:#E1E4E8\">.threadPtr \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> args[\u003C/span>\u003Cspan style=\"color:#79B8FF\">0\u003C/span>\u003Cspan style=\"color:#E1E4E8\">];\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">                    this\u003C/span>\u003Cspan style=\"color:#E1E4E8\">.startRoutine \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> args[\u003C/span>\u003Cspan style=\"color:#79B8FF\">2\u003C/span>\u003Cspan style=\"color:#E1E4E8\">];\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">                    this\u003C/span>\u003Cspan style=\"color:#E1E4E8\">.routineArg \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> args[\u003C/span>\u003Cspan style=\"color:#79B8FF\">3\u003C/span>\u003Cspan style=\"color:#E1E4E8\">];\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">                    // Hooking first startRoutine after libprotectt is loaded is enough\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">                    if\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> (\u003C/span>\u003Cspan style=\"color:#F97583\">!\u003C/span>\u003Cspan style=\"color:#E1E4E8\">hooked) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">                        const\u003C/span>\u003Cspan style=\"color:#79B8FF\"> startRoutineHook\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> Interceptor.\u003C/span>\u003Cspan style=\"color:#B392F0\">replace\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#79B8FF\">this\u003C/span>\u003Cspan style=\"color:#E1E4E8\">.startRoutine, \u003C/span>\u003Cspan style=\"color:#F97583\">new\u003C/span>\u003Cspan style=\"color:#B392F0\"> NativeCallback\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(() \u003C/span>\u003Cspan style=\"color:#F97583\">=>\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">                            console.\u003C/span>\u003Cspan style=\"color:#B392F0\">log\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"[+] Thread function started\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">                            var\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> targetModule \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> Process.\u003C/span>\u003Cspan style=\"color:#B392F0\">findModuleByName\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"libprotectt-native-lib.so\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">                            if\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> (targetModule) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">                                const\u003C/span>\u003Cspan style=\"color:#79B8FF\"> baseAddr\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> targetModule.base;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">                                Interceptor.\u003C/span>\u003Cspan style=\"color:#B392F0\">replace\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(baseAddr.\u003C/span>\u003Cspan style=\"color:#B392F0\">add\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#79B8FF\">0x59E24\u003C/span>\u003Cspan style=\"color:#E1E4E8\">), \u003C/span>\u003Cspan style=\"color:#F97583\">new\u003C/span>\u003Cspan style=\"color:#B392F0\"> NativeCallback\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(() \u003C/span>\u003Cspan style=\"color:#F97583\">=>\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">                                    console.\u003C/span>\u003Cspan style=\"color:#B392F0\">log\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"[+] mainThread Hook\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">                                }, \u003C/span>\u003Cspan style=\"color:#9ECBFF\">'void'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, []));\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">                                Interceptor.\u003C/span>\u003Cspan style=\"color:#B392F0\">replace\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(baseAddr.\u003C/span>\u003Cspan style=\"color:#B392F0\">add\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#79B8FF\">0x599EC\u003C/span>\u003Cspan style=\"color:#E1E4E8\">), \u003C/span>\u003Cspan style=\"color:#F97583\">new\u003C/span>\u003Cspan style=\"color:#B392F0\"> NativeCallback\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(() \u003C/span>\u003Cspan style=\"color:#F97583\">=>\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">                                    console.\u003C/span>\u003Cspan style=\"color:#B392F0\">log\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"[+] mainThread2 Hook\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">                                }, \u003C/span>\u003Cspan style=\"color:#9ECBFF\">'void'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, []));\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">                            }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">                        }, \u003C/span>\u003Cspan style=\"color:#9ECBFF\">'void'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, [\u003C/span>\u003Cspan style=\"color:#9ECBFF\">'pointer'\u003C/span>\u003Cspan style=\"color:#E1E4E8\">]));\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">                        hooked \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#79B8FF\"> true\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">                        threadHook.\u003C/span>\u003Cspan style=\"color:#B392F0\">detach\u003C/span>\u003Cspan style=\"color:#E1E4E8\">();\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">                    }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">                },\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">            });\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        Runtime.\u003C/span>\u003Cspan style=\"color:#B392F0\">getRuntime\u003C/span>\u003Cspan style=\"color:#E1E4E8\">().\u003C/span>\u003Cspan style=\"color:#B392F0\">loadLibrary0\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(VMStack.\u003C/span>\u003Cspan style=\"color:#B392F0\">getCallingClassLoader\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(), library);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">        const\u003C/span>\u003Cspan style=\"color:#79B8FF\"> classLoader\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> VMStack.\u003C/span>\u003Cspan style=\"color:#B392F0\">getCallingClassLoader\u003C/span>\u003Cspan style=\"color:#E1E4E8\">();\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">        if\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> (library \u003C/span>\u003Cspan style=\"color:#F97583\">==\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \"protectt-native-lib\"\u003C/span>\u003Cspan style=\"color:#F97583\"> &#x26;&#x26;\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> threadHook) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">            threadHook.\u003C/span>\u003Cspan style=\"color:#B392F0\">detach\u003C/span>\u003Cspan style=\"color:#E1E4E8\">();\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">            threadHook \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#79B8FF\"> null\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    };\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch2 id=\"bypassing-root-detection\">Bypassing root detection\u003Ca class=\"autolink-header\" aria-hidden=\"\" tabindex=\"-1\" href=\"#bypassing-root-detection\">\u003Cspan class=\"sr-only\"> permalink\u003C/span>\u003Csvg class=\"inline ml-2 hover:text-neutral-500\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\u003Cpath d=\"M9.199 13.599a5.99 5.99 0 0 0 3.949 2.345 5.987 5.987 0 0 0 5.105-1.702l2.995-2.994a5.992 5.992 0 0 0 1.695-4.285 5.976 5.976 0 0 0-1.831-4.211 5.99 5.99 0 0 0-6.431-1.242 6.003 6.003 0 0 0-1.905 1.24l-1.731 1.721a.999.999 0 1 0 1.41 1.418l1.709-1.699a3.985 3.985 0 0 1 2.761-1.123 3.975 3.975 0 0 1 2.799 1.122 3.997 3.997 0 0 1 .111 5.644l-3.005 3.006a3.982 3.982 0 0 1-3.395 1.126 3.987 3.987 0 0 1-2.632-1.563A1 1 0 0 0 9.201 13.6zm5.602-3.198a5.99 5.99 0 0 0-3.949-2.345 5.987 5.987 0 0 0-5.105 1.702l-2.995 2.994a5.992 5.992 0 0 0-1.695 4.285 5.976 5.976 0 0 0 1.831 4.211 5.99 5.99 0 0 0 6.431 1.242 6.003 6.003 0 0 0 1.905-1.24l1.723-1.723a.999.999 0 1 0-1.414-1.414L9.836 19.81a3.985 3.985 0 0 1-2.761 1.123 3.975 3.975 0 0 1-2.799-1.122 3.997 3.997 0 0 1-.111-5.644l3.005-3.006a3.982 3.982 0 0 1 3.395-1.126 3.987 3.987 0 0 1 2.632 1.563 1 1 0 0 0 1.602-1.198z\">\u003C/path>\u003C/svg>\u003C/a>\u003C/h2>\n\u003Cp>With this I was able to bypass the Anti-Frida detection but now I was getting root detected.\u003C/p>\n\u003Cp>\u003Cimg __ASTRO_IMAGE_=\"{&#x22;src&#x22;:&#x22;../../images/reverse-engineering-icici-root-detection.png&#x22;,&#x22;alt&#x22;:&#x22;Root Detection&#x22;,&#x22;index&#x22;:0}\">\u003C/p>\n\u003Cp>So I tried searching for the string âYour Device is rooted. For security reasonsâ¦â in the APK but no results were found. I searched in \u003Ccode>/data/data\u003C/code> and \u003Ccode>/data/user\u003C/code> still no results.\u003C/p>\n\u003Cp>With no luck I tried searching for âClose Appâ again no luck. I tried with case insensitive and partial strings like âYour Deviceâ etcâ¦ Still no luck.\u003C/p>\n\u003Cp>I decided to change my approach and search for Android APIs that exit the app, \u003Ca href=\"https://stackoverflow.com/questions/17719634/how-to-exit-an-android-app-programmatically\">Stackoverflow\u003C/a> has a good list.\u003C/p>\n\u003Cul>\n\u003Cli>finishAffinity\u003C/li>\n\u003Cli>finishAndRemoveTask\u003C/li>\n\u003Cli>getActivity().finish();\u003C/li>\n\u003Cli>System.exit(0)\u003C/li>\n\u003C/ul>\n\u003Cp>I tried searching for these with JADX code search and found a few interesting functions. Itâs likely only the main oneâs are relevant. And we focus our search inside the ai package.\u003C/p>\n\u003Cp>\u003Cimg __ASTRO_IMAGE_=\"{&#x22;src&#x22;:&#x22;../../images/reverse-engineering-icici-system-exit.png&#x22;,&#x22;alt&#x22;:&#x22;System.exit functions&#x22;,&#x22;index&#x22;:0}\">\u003C/p>\n\u003Cp>After seeing a few of these functions there is a common function \u003Ccode>companion.d()\u003C/code>. Itâs called by everything that closes the apps. So instead of hooking all the above functions, we can just hook one and get the stacktrace.\u003C/p>\n\u003Cp>\u003Cimg __ASTRO_IMAGE_=\"{&#x22;src&#x22;:&#x22;../../images/reverse-engineering-icici-common.png&#x22;,&#x22;alt&#x22;:&#x22;Common code&#x22;,&#x22;index&#x22;:0}\">\u003C/p>\n\u003Cp>I hook this so I can see what exactly is calling it up the stack. So I can hook the parent function and bypass the root detection. This was by far the hardest part because there is at least 25 functions that need to be traced up the stack using Frida + JADX. I found several ways to bypass \u003Cdel>Censored\u003C/del> but I will be showing part of the process as the actual process is TOO long and I am not able to retrace what I did lol.\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"js\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">let\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> a \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> Java.\u003C/span>\u003Cspan style=\"color:#B392F0\">use\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"protecttor.app.security.main.g$a\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">a[\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"d\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">].\u003C/span>\u003Cspan style=\"color:#B392F0\">implementation\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#F97583\"> function\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> () {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">\tconsole.\u003C/span>\u003Cspan style=\"color:#B392F0\">log\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">`a.d is called`\u003C/span>\u003Cspan style=\"color:#E1E4E8\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">\tlet\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> result \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#79B8FF\"> this\u003C/span>\u003Cspan style=\"color:#E1E4E8\">[\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"d\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">]();\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">\tconsole.\u003C/span>\u003Cspan style=\"color:#B392F0\">log\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">`a.d result=${\u003C/span>\u003Cspan style=\"color:#E1E4E8\">result\u003C/span>\u003Cspan style=\"color:#9ECBFF\">}`\u003C/span>\u003Cspan style=\"color:#E1E4E8\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">\tconsole.\u003C/span>\u003Cspan style=\"color:#B392F0\">log\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(Java.\u003C/span>\u003Cspan style=\"color:#B392F0\">use\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"android.util.Log\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">).\u003C/span>\u003Cspan style=\"color:#B392F0\">getStackTraceString\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(Java.\u003C/span>\u003Cspan style=\"color:#B392F0\">use\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"java.lang.Exception\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">).\u003C/span>\u003Cspan style=\"color:#B392F0\">$new\u003C/span>\u003Cspan style=\"color:#E1E4E8\">()))\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">\treturn\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> result;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">};\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>Once we click âClose Appâ the last stack trace should give us the correct function.\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"bash\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">a.d\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> is\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> called\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">a.d\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> result=[object\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> Object]\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">java.lang.Exception\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">        at\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> protecttor.app.security.main.g\u003C/span>\u003Cspan style=\"color:#E1E4E8\">$a\u003C/span>\u003Cspan style=\"color:#9ECBFF\">.d\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#B392F0\">Native\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> Method\u003C/span>\u003Cspan style=\"color:#E1E4E8\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">        at\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> protecttor.app.security.main.scan.ScanAlerts.x\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#B392F0\">Unknown\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> Source:49\u003C/span>\u003Cspan style=\"color:#E1E4E8\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">        at\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> protecttor.app.security.main.scan.ScanAlerts.V\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#B392F0\">Unknown\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> Source:11\u003C/span>\u003Cspan style=\"color:#E1E4E8\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">        at\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> protecttor.app.security.main.scan.ScanAlerts.d0\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#B392F0\">Unknown\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> Source:3\u003C/span>\u003Cspan style=\"color:#E1E4E8\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">        at\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> protecttor.app.security.main.scan.ScanAlerts.f\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#B392F0\">Unknown\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> Source:0\u003C/span>\u003Cspan style=\"color:#E1E4E8\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">        at\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> protecttor.app.security.main.scan.t.onClick\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#B392F0\">Unknown\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> Source:4\u003C/span>\u003Cspan style=\"color:#E1E4E8\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">        at\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> android.view.View.performClick\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#B392F0\">View.java:8028\u003C/span>\u003Cspan style=\"color:#E1E4E8\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">        at\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> android.view.View.performClickInternal\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#B392F0\">View.java:8005\u003C/span>\u003Cspan style=\"color:#E1E4E8\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">        at\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> android.view.View.-\u003C/span>\u003Cspan style=\"color:#E1E4E8\">$$Nest$mperformClickInternal(\u003C/span>\u003Cspan style=\"color:#B392F0\">Unknown\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> Source:0\u003C/span>\u003Cspan style=\"color:#E1E4E8\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">        at\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> android.view.View\u003C/span>\u003Cspan style=\"color:#E1E4E8\">$PerformClick\u003C/span>\u003Cspan style=\"color:#9ECBFF\">.run\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#B392F0\">View.java:31233\u003C/span>\u003Cspan style=\"color:#E1E4E8\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">        at\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> android.os.Handler.handleCallback\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#B392F0\">Handler.java:959\u003C/span>\u003Cspan style=\"color:#E1E4E8\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">        at\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> android.os.Handler.dispatchMessage\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#B392F0\">Handler.java:100\u003C/span>\u003Cspan style=\"color:#E1E4E8\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">        at\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> android.os.Looper.loopOnce\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#B392F0\">Looper.java:258\u003C/span>\u003Cspan style=\"color:#E1E4E8\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">        at\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> android.os.Looper.loop\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#B392F0\">Looper.java:356\u003C/span>\u003Cspan style=\"color:#E1E4E8\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">        at\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> android.app.ActivityThread.main\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#B392F0\">ActivityThread.java:8837\u003C/span>\u003Cspan style=\"color:#E1E4E8\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">        at\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> java.lang.reflect.Method.invoke\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#B392F0\">Native\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> Method\u003C/span>\u003Cspan style=\"color:#E1E4E8\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">        at\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> com.android.internal.os.RuntimeInit\u003C/span>\u003Cspan style=\"color:#E1E4E8\">$MethodAndArgsCaller\u003C/span>\u003Cspan style=\"color:#9ECBFF\">.run\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#B392F0\">RuntimeInit.java:598\u003C/span>\u003Cspan style=\"color:#E1E4E8\">)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">        at\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> com.android.internal.os.ZygoteInit.main\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#B392F0\">ZygoteInit.java:896\u003C/span>\u003Cspan style=\"color:#E1E4E8\">)\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>\u003Cimg __ASTRO_IMAGE_=\"{&#x22;src&#x22;:&#x22;../../images/reverse-engineering-icici-t-click.png&#x22;,&#x22;alt&#x22;:&#x22;&#x22;,&#x22;index&#x22;:0}\">\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"plaintext\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan>ScanAlerts.U is called: btnBlock=androidx.appcompat.widget.AppCompatButton{6e89fa8 VFED..C.. ......I. 0,0-0,0 #7f0a03a7 app:id/btn_sdk_btn_block}, mBuilder=android.app.AlertDialog@5a\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>15ac1, btnIgnore=androidx.appcompat.widget.AppCompatButton{1a0a266 VFED..C.. ......I. 0,0-0,0 #7f0a03a8 app:id/btn_sdk_btn_ignore}, response=Java.Field{                              \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>        holder: protecttor.app.security.shouldnotobfuscated.dto.i@3c469a7,                \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>        fieldType: 2,                                                                                                                                                                 \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>        fieldReturnType: Ljava/lang/String;,                                                                                                                                          \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>        value: Your Device is rooted. For security reasons we have stopped the Mobile Banking Services on rooted devices.,                                                            \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>}, checkBoxForceAccept=androidx.appcompat.widget.AppCompatCheckBox{fc0e54 GFED..C.. ......I. 0,0-0,0 #7f0a0885 app:id/force_accept}                                                   \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>[+] Spoofing adb_enabled to 0 (OFF)                                                                                                                                                   \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>java.lang.Exception                                                                                                                                                                   \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>        at protecttor.app.security.main.scan.ScanAlerts.U(Native Method)                                                                                                             \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>        at protecttor.app.security.main.scan.ScanAlerts.C(Unknown Source:1084)                                                                                                       \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>        at protecttor.app.security.main.scan.ScanAlerts.a0(Unknown Source:289)                                                                                                       \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>        at protecttor.app.security.main.g.C1(Unknown Source:10)                                                                                                                      \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>        at protecttor.app.security.main.g.o(Unknown Source:0)                                                                                                                        \u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>        at protecttor.app.security.main.c.run(Unknown Source:2)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>        at android.os.Handler.handleCallback(Handler.java:959\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>\u003Cimg __ASTRO_IMAGE_=\"{&#x22;src&#x22;:&#x22;../../images/reverse-engineering-icici-b1.png&#x22;,&#x22;alt&#x22;:&#x22;&#x22;,&#x22;index&#x22;:0}\">\u003C/p>\n\u003Cp>Keep repeating this process and trying things, you should trace it to a call in \u003Ccode>IMOBILE\u003C/code> or \u003Ccode>IMobileApplication\u003C/code>. I will now move onto the findings.\u003C/p>\n\u003Cp>\u003Cimg __ASTRO_IMAGE_=\"{&#x22;src&#x22;:&#x22;../../images/reverse-engineering-icici-b1-parent.png&#x22;,&#x22;alt&#x22;:&#x22;&#x22;,&#x22;index&#x22;:0}\">\u003C/p>\n\u003Ch3 id=\"imobileoncreate\">IMOBILE.onCreate\u003Ca class=\"autolink-header\" aria-hidden=\"\" tabindex=\"-1\" href=\"#imobileoncreate\">\u003Cspan class=\"sr-only\"> permalink\u003C/span>\u003Csvg class=\"inline ml-2 hover:text-neutral-500\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\u003Cpath d=\"M9.199 13.599a5.99 5.99 0 0 0 3.949 2.345 5.987 5.987 0 0 0 5.105-1.702l2.995-2.994a5.992 5.992 0 0 0 1.695-4.285 5.976 5.976 0 0 0-1.831-4.211 5.99 5.99 0 0 0-6.431-1.242 6.003 6.003 0 0 0-1.905 1.24l-1.731 1.721a.999.999 0 1 0 1.41 1.418l1.709-1.699a3.985 3.985 0 0 1 2.761-1.123 3.975 3.975 0 0 1 2.799 1.122 3.997 3.997 0 0 1 .111 5.644l-3.005 3.006a3.982 3.982 0 0 1-3.395 1.126 3.987 3.987 0 0 1-2.632-1.563A1 1 0 0 0 9.201 13.6zm5.602-3.198a5.99 5.99 0 0 0-3.949-2.345 5.987 5.987 0 0 0-5.105 1.702l-2.995 2.994a5.992 5.992 0 0 0-1.695 4.285 5.976 5.976 0 0 0 1.831 4.211 5.99 5.99 0 0 0 6.431 1.242 6.003 6.003 0 0 0 1.905-1.24l1.723-1.723a.999.999 0 1 0-1.414-1.414L9.836 19.81a3.985 3.985 0 0 1-2.761 1.123 3.975 3.975 0 0 1-2.799-1.122 3.997 3.997 0 0 1-.111-5.644l3.005-3.006a3.982 3.982 0 0 1 3.395-1.126 3.987 3.987 0 0 1 2.632 1.563 1 1 0 0 0 1.602-1.198z\">\u003C/path>\u003C/svg>\u003C/a>\u003C/h3>\n\u003Cp>\u003Ccode>com.csam.xyzbank.bank.imobile.IMOBILE.onCreate\u003C/code> calls \u003Ccode>getLoggingStatus\u003C/code>. This function has nothing to do with logging but does security checks, \u003Cdel>Censored\u003C/del> is known to misdirect reverse researchers using fake naming, calling the actual function in an error exception, using decoy functions, among other techniques.\u003C/p>\n\u003Cp>\u003Cimg __ASTRO_IMAGE_=\"{&#x22;src&#x22;:&#x22;../../images/reverse-engineering-icici-oncreate.png&#x22;,&#x22;alt&#x22;:&#x22;&#x22;,&#x22;index&#x22;:0}\">\u003C/p>\n\u003Cp>\u003Ccode>getLoggingStatus\u003C/code> is a native function, we have to check all native libraries for this JNI function.\u003C/p>\n\u003Cp>\u003Cimg __ASTRO_IMAGE_=\"{&#x22;src&#x22;:&#x22;../../images/reverse-engineering-icici-get-logging-status.png&#x22;,&#x22;alt&#x22;:&#x22;&#x22;,&#x22;index&#x22;:0}\">\u003C/p>\n\u003Cp>The function was located in \u003Ccode>libnative-lib.so\u003C/code>, IDA shows it calls the function \u003Ccode>com.csam.xyzbank.bank.imobile.IMOBILE.logStatus()\u003C/code>.\u003C/p>\n\u003Cp>\u003Cimg __ASTRO_IMAGE_=\"{&#x22;src&#x22;:&#x22;../../images/reverse-engineering-icici-native-logging.png&#x22;,&#x22;alt&#x22;:&#x22;&#x22;,&#x22;index&#x22;:0}\">\u003C/p>\n\u003Cp>Here we finally see \u003Ccode>logStatus\u003C/code> calls \u003Ccode>log\u003C/code> and in turn calls some security checks.\u003C/p>\n\u003Cp>\u003Cimg __ASTRO_IMAGE_=\"{&#x22;src&#x22;:&#x22;../../images/reverse-engineering-icici-dsgf.png&#x22;,&#x22;alt&#x22;:&#x22;&#x22;,&#x22;index&#x22;:0}\">\u003C/p>\n\u003Ch3 id=\"imobileonresume\">IMOBILE.onResume\u003Ca class=\"autolink-header\" aria-hidden=\"\" tabindex=\"-1\" href=\"#imobileonresume\">\u003Cspan class=\"sr-only\"> permalink\u003C/span>\u003Csvg class=\"inline ml-2 hover:text-neutral-500\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\u003Cpath d=\"M9.199 13.599a5.99 5.99 0 0 0 3.949 2.345 5.987 5.987 0 0 0 5.105-1.702l2.995-2.994a5.992 5.992 0 0 0 1.695-4.285 5.976 5.976 0 0 0-1.831-4.211 5.99 5.99 0 0 0-6.431-1.242 6.003 6.003 0 0 0-1.905 1.24l-1.731 1.721a.999.999 0 1 0 1.41 1.418l1.709-1.699a3.985 3.985 0 0 1 2.761-1.123 3.975 3.975 0 0 1 2.799 1.122 3.997 3.997 0 0 1 .111 5.644l-3.005 3.006a3.982 3.982 0 0 1-3.395 1.126 3.987 3.987 0 0 1-2.632-1.563A1 1 0 0 0 9.201 13.6zm5.602-3.198a5.99 5.99 0 0 0-3.949-2.345 5.987 5.987 0 0 0-5.105 1.702l-2.995 2.994a5.992 5.992 0 0 0-1.695 4.285 5.976 5.976 0 0 0 1.831 4.211 5.99 5.99 0 0 0 6.431 1.242 6.003 6.003 0 0 0 1.905-1.24l1.723-1.723a.999.999 0 1 0-1.414-1.414L9.836 19.81a3.985 3.985 0 0 1-2.761 1.123 3.975 3.975 0 0 1-2.799-1.122 3.997 3.997 0 0 1-.111-5.644l3.005-3.006a3.982 3.982 0 0 1 3.395-1.126 3.987 3.987 0 0 1 2.632 1.563 1 1 0 0 0 1.602-1.198z\">\u003C/path>\u003C/svg>\u003C/a>\u003C/h3>\n\u003Cp>We just need to hook \u003Ccode>wVar.m(this, this);\u003C/code> and \u003Ccode>protecttor.app.security.common.helper.h0.f1361a.z(this, this)\u003C/code>.\u003C/p>\n\u003Cp>\u003Cimg __ASTRO_IMAGE_=\"{&#x22;src&#x22;:&#x22;../../images/reverse-engineering-icici-onresume-checks.png&#x22;,&#x22;alt&#x22;:&#x22;&#x22;,&#x22;index&#x22;:0}\">\u003C/p>\n\u003Ch3 id=\"root-bypass-script\">Root bypass script\u003Ca class=\"autolink-header\" aria-hidden=\"\" tabindex=\"-1\" href=\"#root-bypass-script\">\u003Cspan class=\"sr-only\"> permalink\u003C/span>\u003Csvg class=\"inline ml-2 hover:text-neutral-500\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\u003Cpath d=\"M9.199 13.599a5.99 5.99 0 0 0 3.949 2.345 5.987 5.987 0 0 0 5.105-1.702l2.995-2.994a5.992 5.992 0 0 0 1.695-4.285 5.976 5.976 0 0 0-1.831-4.211 5.99 5.99 0 0 0-6.431-1.242 6.003 6.003 0 0 0-1.905 1.24l-1.731 1.721a.999.999 0 1 0 1.41 1.418l1.709-1.699a3.985 3.985 0 0 1 2.761-1.123 3.975 3.975 0 0 1 2.799 1.122 3.997 3.997 0 0 1 .111 5.644l-3.005 3.006a3.982 3.982 0 0 1-3.395 1.126 3.987 3.987 0 0 1-2.632-1.563A1 1 0 0 0 9.201 13.6zm5.602-3.198a5.99 5.99 0 0 0-3.949-2.345 5.987 5.987 0 0 0-5.105 1.702l-2.995 2.994a5.992 5.992 0 0 0-1.695 4.285 5.976 5.976 0 0 0 1.831 4.211 5.99 5.99 0 0 0 6.431 1.242 6.003 6.003 0 0 0 1.905-1.24l1.723-1.723a.999.999 0 1 0-1.414-1.414L9.836 19.81a3.985 3.985 0 0 1-2.761 1.123 3.975 3.975 0 0 1-2.799-1.122 3.997 3.997 0 0 1-.111-5.644l3.005-3.006a3.982 3.982 0 0 1 3.395-1.126 3.987 3.987 0 0 1 2.632 1.563 1 1 0 0 0 1.602-1.198z\">\u003C/path>\u003C/svg>\u003C/a>\u003C/h3>\n\u003Cp>These are all the security checks called from the MainActivity, we want to block everything from the root so it doesnât run in the background or start some \u003Ccode>Timer\u003C/code>. Finally putting all the bypasses together we get:\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"js\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">// Native library calls from IMOBILE.onCreate\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">let\u003C/span>\u003Cspan style=\"color:#79B8FF\"> IMOBILE\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> Java.\u003C/span>\u003Cspan style=\"color:#B392F0\">use\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"com.csam.xyzbank.bank.imobile.IMOBILE\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">IMOBILE\u003C/span>\u003Cspan style=\"color:#E1E4E8\">[\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"logStatus\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">].\u003C/span>\u003Cspan style=\"color:#B392F0\">implementation\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#F97583\"> function\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> () {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">\tconsole.\u003C/span>\u003Cspan style=\"color:#B392F0\">log\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">`IMOBILE.logStatus is called`\u003C/span>\u003Cspan style=\"color:#E1E4E8\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">};\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">// ActivityLifecycleCallbacks\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">let\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> LoggerController \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> Java.\u003C/span>\u003Cspan style=\"color:#B392F0\">use\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"protecttor.app.security.main.LoggerController\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">LoggerController[\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"i\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">].\u003C/span>\u003Cspan style=\"color:#B392F0\">implementation\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#F97583\"> function\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> (\u003C/span>\u003Cspan style=\"color:#FFAB70\">context\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#FFAB70\">activity\u003C/span>\u003Cspan style=\"color:#E1E4E8\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">\tconsole.\u003C/span>\u003Cspan style=\"color:#B392F0\">log\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">`LoggerController.i is called: context=${\u003C/span>\u003Cspan style=\"color:#E1E4E8\">context\u003C/span>\u003Cspan style=\"color:#9ECBFF\">}, activity=${\u003C/span>\u003Cspan style=\"color:#E1E4E8\">activity\u003C/span>\u003Cspan style=\"color:#9ECBFF\">}`\u003C/span>\u003Cspan style=\"color:#E1E4E8\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">};\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">// IMOBILE.onResume Check1\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">let\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> h0 \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> Java.\u003C/span>\u003Cspan style=\"color:#B392F0\">use\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"protecttor.app.security.common.helper.h0\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">h0[\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"z\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">].\u003C/span>\u003Cspan style=\"color:#B392F0\">implementation\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#F97583\"> function\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> (\u003C/span>\u003Cspan style=\"color:#FFAB70\">context\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#FFAB70\">activity\u003C/span>\u003Cspan style=\"color:#E1E4E8\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">console.\u003C/span>\u003Cspan style=\"color:#B392F0\">log\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">`h0.z is called: context=${\u003C/span>\u003Cspan style=\"color:#E1E4E8\">context\u003C/span>\u003Cspan style=\"color:#9ECBFF\">}, activity=${\u003C/span>\u003Cspan style=\"color:#E1E4E8\">activity\u003C/span>\u003Cspan style=\"color:#9ECBFF\">}`\u003C/span>\u003Cspan style=\"color:#E1E4E8\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">};\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">// IMOBILE.onResume Check2\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">let\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> w \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> Java.\u003C/span>\u003Cspan style=\"color:#B392F0\">use\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"protecttor.app.security.common.helper.w\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">w[\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"m\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">].\u003C/span>\u003Cspan style=\"color:#B392F0\">implementation\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#F97583\"> function\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> (\u003C/span>\u003Cspan style=\"color:#FFAB70\">context\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#FFAB70\">activity\u003C/span>\u003Cspan style=\"color:#E1E4E8\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">\tconsole.\u003C/span>\u003Cspan style=\"color:#B392F0\">log\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">`w.m is called: context=${\u003C/span>\u003Cspan style=\"color:#E1E4E8\">context\u003C/span>\u003Cspan style=\"color:#9ECBFF\">}, activity=${\u003C/span>\u003Cspan style=\"color:#E1E4E8\">activity\u003C/span>\u003Cspan style=\"color:#9ECBFF\">}`\u003C/span>\u003Cspan style=\"color:#E1E4E8\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">};\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch2 id=\"finally-getting-a-custom-vpa\">Finally getting a custom VPA\u003Ca class=\"autolink-header\" aria-hidden=\"\" tabindex=\"-1\" href=\"#finally-getting-a-custom-vpa\">\u003Cspan class=\"sr-only\"> permalink\u003C/span>\u003Csvg class=\"inline ml-2 hover:text-neutral-500\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\u003Cpath d=\"M9.199 13.599a5.99 5.99 0 0 0 3.949 2.345 5.987 5.987 0 0 0 5.105-1.702l2.995-2.994a5.992 5.992 0 0 0 1.695-4.285 5.976 5.976 0 0 0-1.831-4.211 5.99 5.99 0 0 0-6.431-1.242 6.003 6.003 0 0 0-1.905 1.24l-1.731 1.721a.999.999 0 1 0 1.41 1.418l1.709-1.699a3.985 3.985 0 0 1 2.761-1.123 3.975 3.975 0 0 1 2.799 1.122 3.997 3.997 0 0 1 .111 5.644l-3.005 3.006a3.982 3.982 0 0 1-3.395 1.126 3.987 3.987 0 0 1-2.632-1.563A1 1 0 0 0 9.201 13.6zm5.602-3.198a5.99 5.99 0 0 0-3.949-2.345 5.987 5.987 0 0 0-5.105 1.702l-2.995 2.994a5.992 5.992 0 0 0-1.695 4.285 5.976 5.976 0 0 0 1.831 4.211 5.99 5.99 0 0 0 6.431 1.242 6.003 6.003 0 0 0 1.905-1.24l1.723-1.723a.999.999 0 1 0-1.414-1.414L9.836 19.81a3.985 3.985 0 0 1-2.761 1.123 3.975 3.975 0 0 1-2.799-1.122 3.997 3.997 0 0 1-.111-5.644l3.005-3.006a3.982 3.982 0 0 1 3.395-1.126 3.987 3.987 0 0 1 2.632 1.563 1 1 0 0 0 1.602-1.198z\">\u003C/path>\u003C/svg>\u003C/a>\u003C/h2>\n\u003Cp>After launching my script with \u003Ca href=\"https://codeshare.frida.re/@akabe1/frida-multiple-unpinning/\">https://codeshare.frida.re/@akabe1/frida-multiple-unpinning/\u003C/a> I was able to view the HTTPS traffic. But unfortunately it was encrypted so we canât just modify the request.\u003C/p>\n\u003Cp>\u003Cimg __ASTRO_IMAGE_=\"{&#x22;src&#x22;:&#x22;../../images/reverse-engineering-icici-zap.png&#x22;,&#x22;alt&#x22;:&#x22;&#x22;,&#x22;index&#x22;:0}\">\u003C/p>\n\u003Cp>Lets search for the string âencResponseâ so we can print the strings as itâs being encrypted and decrypted. There were only 2 relevant results and one function is a wrapper for the below function so lets hook it. This condition calls \u003Ccode>w0\u003C/code> if the JSON has \u003Ccode>encResponse\u003C/code>.\u003C/p>\n\u003Cp>\u003Cimg __ASTRO_IMAGE_=\"{&#x22;src&#x22;:&#x22;../../images/reverse-engineering-icici-dsf.png&#x22;,&#x22;alt&#x22;:&#x22;&#x22;,&#x22;index&#x22;:0}\">\u003C/p>\n\u003Cp>w0 calls \u003Ccode>com.Discover.Security.a\u003C/code> etc. These are the functions we want to hook. We need to hook all the functions in these classes because which function is chosen is random.\u003C/p>\n\u003Cp>\u003Cimg __ASTRO_IMAGE_=\"{&#x22;src&#x22;:&#x22;../../images/reverse-engineering-icici-truirt.png&#x22;,&#x22;alt&#x22;:&#x22;&#x22;,&#x22;index&#x22;:0}\">\u003C/p>\n\u003Cp>This above screenshot is only for decryption, so the code I used to hook all encryption and decryption functions is:\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"js\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">let\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> a \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> Java.\u003C/span>\u003Cspan style=\"color:#B392F0\">use\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"com.Discover.Security.a\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">a[\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"a\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">].\u003C/span>\u003Cspan style=\"color:#B392F0\">implementation\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#F97583\"> function\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> (\u003C/span>\u003Cspan style=\"color:#FFAB70\">textToDecrypt\u003C/span>\u003Cspan style=\"color:#E1E4E8\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">\tlet\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> result \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#79B8FF\"> this\u003C/span>\u003Cspan style=\"color:#E1E4E8\">[\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"a\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">](textToDecrypt);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">\tconsole.\u003C/span>\u003Cspan style=\"color:#B392F0\">log\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">`a.a result=${\u003C/span>\u003Cspan style=\"color:#E1E4E8\">result\u003C/span>\u003Cspan style=\"color:#9ECBFF\">}`\u003C/span>\u003Cspan style=\"color:#E1E4E8\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">\treturn\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> result;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">};\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">a[\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"b\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">].\u003C/span>\u003Cspan style=\"color:#B392F0\">implementation\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#F97583\"> function\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> (\u003C/span>\u003Cspan style=\"color:#FFAB70\">textToEncrypt\u003C/span>\u003Cspan style=\"color:#E1E4E8\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">\tconsole.\u003C/span>\u003Cspan style=\"color:#B392F0\">log\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">`a.b is called: textToEncrypt=${\u003C/span>\u003Cspan style=\"color:#E1E4E8\">textToEncrypt\u003C/span>\u003Cspan style=\"color:#9ECBFF\">}`\u003C/span>\u003Cspan style=\"color:#E1E4E8\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">\tlet\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> result \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#79B8FF\"> this\u003C/span>\u003Cspan style=\"color:#E1E4E8\">[\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"b\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">](textToEncrypt);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">\tconsole.\u003C/span>\u003Cspan style=\"color:#B392F0\">log\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">`a.b result=${\u003C/span>\u003Cspan style=\"color:#E1E4E8\">result\u003C/span>\u003Cspan style=\"color:#9ECBFF\">}`\u003C/span>\u003Cspan style=\"color:#E1E4E8\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">\treturn\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> result;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">};\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">let\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> b \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> Java.\u003C/span>\u003Cspan style=\"color:#B392F0\">use\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"com.Discover.Security.b\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">b[\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"a\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">].\u003C/span>\u003Cspan style=\"color:#B392F0\">implementation\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#F97583\"> function\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> (\u003C/span>\u003Cspan style=\"color:#FFAB70\">key\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#FFAB70\">encryptedValue\u003C/span>\u003Cspan style=\"color:#E1E4E8\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">\tlet\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> result \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#79B8FF\"> this\u003C/span>\u003Cspan style=\"color:#E1E4E8\">[\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"a\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">](key, encryptedValue);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">\tconsole.\u003C/span>\u003Cspan style=\"color:#B392F0\">log\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"Response\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#79B8FF\">JSON\u003C/span>\u003Cspan style=\"color:#E1E4E8\">.\u003C/span>\u003Cspan style=\"color:#B392F0\">stringify\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#79B8FF\">JSON\u003C/span>\u003Cspan style=\"color:#E1E4E8\">.\u003C/span>\u003Cspan style=\"color:#B392F0\">parse\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(result), \u003C/span>\u003Cspan style=\"color:#79B8FF\">null\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#79B8FF\">4\u003C/span>\u003Cspan style=\"color:#E1E4E8\">));\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">\treturn\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> result;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">};\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">b[\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"b\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">].\u003C/span>\u003Cspan style=\"color:#B392F0\">implementation\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#F97583\"> function\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> (\u003C/span>\u003Cspan style=\"color:#FFAB70\">key\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#FFAB70\">value\u003C/span>\u003Cspan style=\"color:#E1E4E8\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">\tconsole.\u003C/span>\u003Cspan style=\"color:#B392F0\">log\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">`com.Discover.Security.b.b secureString ${\u003C/span>\u003Cspan style=\"color:#E1E4E8\">key\u003C/span>\u003Cspan style=\"color:#9ECBFF\">}`\u003C/span>\u003Cspan style=\"color:#E1E4E8\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">\tconst\u003C/span>\u003Cspan style=\"color:#79B8FF\"> json\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#79B8FF\"> JSON\u003C/span>\u003Cspan style=\"color:#E1E4E8\">.\u003C/span>\u003Cspan style=\"color:#B392F0\">parse\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(value, \u003C/span>\u003Cspan style=\"color:#79B8FF\">null\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#79B8FF\">4\u003C/span>\u003Cspan style=\"color:#E1E4E8\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">\tconsole.\u003C/span>\u003Cspan style=\"color:#B392F0\">log\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#79B8FF\">JSON\u003C/span>\u003Cspan style=\"color:#E1E4E8\">.\u003C/span>\u003Cspan style=\"color:#B392F0\">stringify\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(json, \u003C/span>\u003Cspan style=\"color:#79B8FF\">null\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#79B8FF\">4\u003C/span>\u003Cspan style=\"color:#E1E4E8\">));\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">\tlet\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> result \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#79B8FF\"> this\u003C/span>\u003Cspan style=\"color:#E1E4E8\">[\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"b\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">](key, value);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">\treturn\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> result;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">};\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>Now that we can see the traffic, I wanted to check the JSON sent just before clicking create UPI ID. There is a VPA attribute which we can modify to our desired one. There are many ways to do this but I just hard coded the VPA in my Frida script. Unfortunately no screenshot for this. During my testing a UPI ID of at least 5 characters was required. All you need to do to get a custom UPI ID is modify the above code to this:\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"js\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">b[\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"b\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">].\u003C/span>\u003Cspan style=\"color:#B392F0\">implementation\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#F97583\"> function\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> (\u003C/span>\u003Cspan style=\"color:#FFAB70\">key\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#FFAB70\">value\u003C/span>\u003Cspan style=\"color:#E1E4E8\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">\tconsole.\u003C/span>\u003Cspan style=\"color:#B392F0\">log\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">`com.Discover.Security.b.b secureString ${\u003C/span>\u003Cspan style=\"color:#E1E4E8\">key\u003C/span>\u003Cspan style=\"color:#9ECBFF\">}`\u003C/span>\u003Cspan style=\"color:#E1E4E8\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">\tconst\u003C/span>\u003Cspan style=\"color:#79B8FF\"> json\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#79B8FF\"> JSON\u003C/span>\u003Cspan style=\"color:#E1E4E8\">.\u003C/span>\u003Cspan style=\"color:#B392F0\">parse\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(value, \u003C/span>\u003Cspan style=\"color:#79B8FF\">null\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#79B8FF\">4\u003C/span>\u003Cspan style=\"color:#E1E4E8\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">\tif\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> (json.\u003C/span>\u003Cspan style=\"color:#79B8FF\">VPA\u003C/span>\u003Cspan style=\"color:#F97583\"> ===\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \"upi_id_from_the_list\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">) {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">\t\tjson.\u003C/span>\u003Cspan style=\"color:#79B8FF\">VPA\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \"YOUR_DESIRED_ID@bankxyz\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">\t\tconsole.\u003C/span>\u003Cspan style=\"color:#B392F0\">log\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"CHANGED VPA\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">\t\tvalue \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#79B8FF\"> JSON\u003C/span>\u003Cspan style=\"color:#E1E4E8\">.\u003C/span>\u003Cspan style=\"color:#B392F0\">stringify\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(json);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">\t}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">\tconsole.\u003C/span>\u003Cspan style=\"color:#B392F0\">log\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(\u003C/span>\u003Cspan style=\"color:#79B8FF\">JSON\u003C/span>\u003Cspan style=\"color:#E1E4E8\">.\u003C/span>\u003Cspan style=\"color:#B392F0\">stringify\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(json, \u003C/span>\u003Cspan style=\"color:#79B8FF\">null\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#79B8FF\">4\u003C/span>\u003Cspan style=\"color:#E1E4E8\">));\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">\tlet\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> result \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#79B8FF\"> this\u003C/span>\u003Cspan style=\"color:#E1E4E8\">[\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"b\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">](key, value);\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">\treturn\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> result;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">};\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>And voila!\u003C/p>\n\u003Cp>\u003Cimg __ASTRO_IMAGE_=\"{&#x22;src&#x22;:&#x22;../../images/customid.png&#x22;,&#x22;alt&#x22;:&#x22;&#x22;,&#x22;index&#x22;:0}\">\u003C/p>",{"headings":54,"localImagePaths":102,"remoteImagePaths":103,"frontmatter":104,"imagePaths":107},[55,59,62,65,68,71,74,77,81,84,87,90,93,96,99],{"depth":56,"slug":57,"text":58},2,"takeaway","Takeaway",{"depth":56,"slug":60,"text":61},"upi","UPI",{"depth":56,"slug":63,"text":64},"initial-analysis","Initial analysis",{"depth":56,"slug":66,"text":67},"attempting-to-locate-anti-frida-detection","Attempting to locate Anti-Frida detection",{"depth":56,"slug":69,"text":70},"protector-company","Protector Company",{"depth":56,"slug":72,"text":73},"extracting-native-libraries","Extracting native libraries",{"depth":56,"slug":75,"text":76},"reverse-engineering-android-native-libraries","Reverse engineering Android native libraries",{"depth":78,"slug":79,"text":80},3,"function-1-reversed","Function 1 reversed",{"depth":78,"slug":82,"text":83},"function-2-reversed","Function 2 reversed",{"depth":56,"slug":85,"text":86},"bypassing-native-library-checks","Bypassing native library checks",{"depth":56,"slug":88,"text":89},"bypassing-root-detection","Bypassing root detection",{"depth":78,"slug":91,"text":92},"imobileoncreate","IMOBILE.onCreate",{"depth":78,"slug":94,"text":95},"imobileonresume","IMOBILE.onResume",{"depth":78,"slug":97,"text":98},"root-bypass-script","Root bypass script",{"depth":56,"slug":100,"text":101},"finally-getting-a-custom-vpa","Finally getting a custom VPA",[27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49],[],{"title":14,"tags":105,"pubDate":106,"image":17,"description":15,"author":23,"isDraft":22},[19,20,21],"Apr 27 2025",[27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49],"reverse-engineering-a-banking-app.md","free-production-kubernetes-cluster",{"id":109,"data":111,"body":121,"filePath":122,"assetImports":123,"digest":125,"rendered":126,"legacyId":164},{"title":112,"description":113,"pubDate":114,"image":115,"tags":116,"isDraft":22,"author":23},"Free Production Grade Kubernetes Cluster For Life","Run and setup a production-ready Kubernetes cluster for free using Infrastructure as Code. This guide shows you how to leverage Oracle Cloud's Free Tier for a secure, easily updatable K8s setup.",["Date","2025-05-05T18:30:00.000Z"],"/kubernetes-cluster.jpg",[117,118,119,120],"devops","kubernetes","oracle","cloud","**Discussion Links**: [r/devops]() | [r/kubernetes]()\n\n## Takeaway\n\n- Learn to run a highly available Kubernetes cluster for free.\n- Learn about Oracle Cloud Infrastructure and its Free Tier.\n- Learn about Infrastructure as Code tools like Terraform and Pulumi.\n- Learn to configure Oracle Bastion with Terraform to securely access a private Kubernetes Cluster.\n- Learn to setup Talos Linux with Longhorn.\n\n## Why I choose Oracle Cloud?\n\n- Best Free Tier among any cloud provider which I will explain below.\n- Good for running production-grade services for low costs.\n- Transferable skills to other hyperscalers like AWS, GCP, etc.\n- Get to work with a Hyperscale Cloud for free.\n\n## What is a hyperscaler?\n\nIn my opinion Hyperscalers are Cloud providers with more than 20+ services which include strong authentication and API access and good support for Terraform.\n\nHyperscalers should ideally have various compute and storage options like Serverless, VMs, Containers, S3, Different Storage types like SSD, NVME, HDD, etc.\n\nHyperscalers usually also have long term commitment discounts.\n\nExamples: AWS, Google Cloud, Azure, OVH Cloud, Oracle, etc.\n\n## Oracle Free Tier Explained\n\nOracle Cloud has one of the best free tiers of any cloud provider. There are two free tier types:\n\n- Always Free (free for life)\n- Free Tier (12 months)\n\nThe important resources to us is the Always Free Compute Resource which includes 3,000 OCPU hours and 18,000 GB hours per month (RAM) for ARM VMs and 2 AMD based compute VMs of `VM.Standard.E2.1.Micro` shape.\n\n> Choose your regions carefully in Oracle you **CANNOT** add or change it later.\n> Also choose your home region carefully that is where you can create Always Free resources.\n\nYou can split it up however you like, in this setup I am using 2 VMs with 6GB RAM, 1 VCPU and 1 VM with 6GB RAM and 2VCPU.\n\nSo according to Oracle Price Calculator which caps the maximum number of hours per month to 720.  \n4 x 720 = **2880 OCPU hours**.  \n8 x 3 x 720 = **17280 GB hours**.\n\n## Why not OCI Kubernetes Engine (OKE)?\n\nThis is a good question whenever we use a cloud provider we should always try to stick to their managed services, but I found upgrading with Talos Linux better because you can upgrade the existing node easily without deleting an existing node.\n\nOKE managed nodes was using Oracle Linux which was eating up more RAM.\n\nCan't customize node specs using OKE -> less flexiable.\n\n## Why Talos Linux?\n\n- Truly immutable, hardened by default (i.e no ssh).\n- Built for Kubernetes, no need to manage OS dependencies.\n- Supports most cloud providers and bare metal workloads.\n- Easy Kubernetes upgrades.\n- Infrastructure as Code.\n\n```hcl\ndata \"talos_machine_configuration\" \"this\" {\n  cluster_name     = var.cluster_name\n  machine_type     = \"controlplane\"\n  cluster_endpoint = \"https://${local.endpoint}:6443\"\n  machine_secrets  = talos_machine_secrets.this.machine_secrets\n\n  config_patches = [\n    yamlencode({\n      machine = {\n        certSANs = [local.endpoint]\n        time = {\n          servers = [\"169.254.169.254\"]\n        }\n        sysctls = {\n          \"vm.nr_hugepages\" = 1024\n        }\n        kernel = {\n          modules = [{ name = \"nvme-tcp\" }, { name = \"vfio_pci\" }]\n        }\n        kubelet = {\n          extraArgs = {\n            \"rotate-server-certificates\" = true\n          }\n          extraMounts = [\n            {\n              destination = \"/var/lib/longhorn\"\n              type        = \"bind\"\n              source      = \"/var/lib/longhorn\"\n              options     = [\"bind\", \"rshared\", \"rw\"]\n            }\n          ]\n        }\n      }\n      cluster = {\n        allowSchedulingOnControlPlanes = true\n        extraManifests = [\n          \"https://raw.githubusercontent.com/alex1989hu/kubelet-serving-cert-approver/main/deploy/standalone-install.yaml\",\n          \"https://github.com/kubernetes-sigs/metrics-server/releases/latest/download/components.yaml\"\n        ]\n        apiServer = {\n          certSANs = [local.endpoint]\n        }\n      }\n    })\n  ]\n}\n```\n\n## Architecture Diagram\n\n![](../../images/diagram-export-6-12-2025-12_40_28-PM.png)\n\nAll Load Balancers are Layer 4 because Layer 7 Load Balancers cost a lot. Only 443 and 80 ports are exposed publicly to the internet. The source code can be found on my GitHub linked below.\n\n## Longhorn\n\n\n\n## Upgrading Kubernetes\n\nupgrades\n\n## References\n\n[github.com/navaneeth-dev/public-gitops/](https://github.com/navaneeth-dev/public-gitops/tree/main/infrastructure)","src/content/blog/free-production-kubernetes-cluster.md",[124],"../../images/diagram-export-6-12-2025-12_40_28-PM.png","4b78b2bb7deb92fc",{"html":127,"metadata":128},"\u003Cp>\u003Cstrong>Discussion Links\u003C/strong>: \u003Ca href=\"\">r/devops\u003C/a> | \u003Ca href=\"\">r/kubernetes\u003C/a>\u003C/p>\n\u003Ch2 id=\"takeaway\">Takeaway\u003Ca class=\"autolink-header\" aria-hidden=\"\" tabindex=\"-1\" href=\"#takeaway\">\u003Cspan class=\"sr-only\"> permalink\u003C/span>\u003Csvg class=\"inline ml-2 hover:text-neutral-500\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\u003Cpath d=\"M9.199 13.599a5.99 5.99 0 0 0 3.949 2.345 5.987 5.987 0 0 0 5.105-1.702l2.995-2.994a5.992 5.992 0 0 0 1.695-4.285 5.976 5.976 0 0 0-1.831-4.211 5.99 5.99 0 0 0-6.431-1.242 6.003 6.003 0 0 0-1.905 1.24l-1.731 1.721a.999.999 0 1 0 1.41 1.418l1.709-1.699a3.985 3.985 0 0 1 2.761-1.123 3.975 3.975 0 0 1 2.799 1.122 3.997 3.997 0 0 1 .111 5.644l-3.005 3.006a3.982 3.982 0 0 1-3.395 1.126 3.987 3.987 0 0 1-2.632-1.563A1 1 0 0 0 9.201 13.6zm5.602-3.198a5.99 5.99 0 0 0-3.949-2.345 5.987 5.987 0 0 0-5.105 1.702l-2.995 2.994a5.992 5.992 0 0 0-1.695 4.285 5.976 5.976 0 0 0 1.831 4.211 5.99 5.99 0 0 0 6.431 1.242 6.003 6.003 0 0 0 1.905-1.24l1.723-1.723a.999.999 0 1 0-1.414-1.414L9.836 19.81a3.985 3.985 0 0 1-2.761 1.123 3.975 3.975 0 0 1-2.799-1.122 3.997 3.997 0 0 1-.111-5.644l3.005-3.006a3.982 3.982 0 0 1 3.395-1.126 3.987 3.987 0 0 1 2.632 1.563 1 1 0 0 0 1.602-1.198z\">\u003C/path>\u003C/svg>\u003C/a>\u003C/h2>\n\u003Cul>\n\u003Cli>Learn to run a highly available Kubernetes cluster for free.\u003C/li>\n\u003Cli>Learn about Oracle Cloud Infrastructure and its Free Tier.\u003C/li>\n\u003Cli>Learn about Infrastructure as Code tools like Terraform and Pulumi.\u003C/li>\n\u003Cli>Learn to configure Oracle Bastion with Terraform to securely access a private Kubernetes Cluster.\u003C/li>\n\u003Cli>Learn to setup Talos Linux with Longhorn.\u003C/li>\n\u003C/ul>\n\u003Ch2 id=\"why-i-choose-oracle-cloud\">Why I choose Oracle Cloud?\u003Ca class=\"autolink-header\" aria-hidden=\"\" tabindex=\"-1\" href=\"#why-i-choose-oracle-cloud\">\u003Cspan class=\"sr-only\"> permalink\u003C/span>\u003Csvg class=\"inline ml-2 hover:text-neutral-500\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\u003Cpath d=\"M9.199 13.599a5.99 5.99 0 0 0 3.949 2.345 5.987 5.987 0 0 0 5.105-1.702l2.995-2.994a5.992 5.992 0 0 0 1.695-4.285 5.976 5.976 0 0 0-1.831-4.211 5.99 5.99 0 0 0-6.431-1.242 6.003 6.003 0 0 0-1.905 1.24l-1.731 1.721a.999.999 0 1 0 1.41 1.418l1.709-1.699a3.985 3.985 0 0 1 2.761-1.123 3.975 3.975 0 0 1 2.799 1.122 3.997 3.997 0 0 1 .111 5.644l-3.005 3.006a3.982 3.982 0 0 1-3.395 1.126 3.987 3.987 0 0 1-2.632-1.563A1 1 0 0 0 9.201 13.6zm5.602-3.198a5.99 5.99 0 0 0-3.949-2.345 5.987 5.987 0 0 0-5.105 1.702l-2.995 2.994a5.992 5.992 0 0 0-1.695 4.285 5.976 5.976 0 0 0 1.831 4.211 5.99 5.99 0 0 0 6.431 1.242 6.003 6.003 0 0 0 1.905-1.24l1.723-1.723a.999.999 0 1 0-1.414-1.414L9.836 19.81a3.985 3.985 0 0 1-2.761 1.123 3.975 3.975 0 0 1-2.799-1.122 3.997 3.997 0 0 1-.111-5.644l3.005-3.006a3.982 3.982 0 0 1 3.395-1.126 3.987 3.987 0 0 1 2.632 1.563 1 1 0 0 0 1.602-1.198z\">\u003C/path>\u003C/svg>\u003C/a>\u003C/h2>\n\u003Cul>\n\u003Cli>Best Free Tier among any cloud provider which I will explain below.\u003C/li>\n\u003Cli>Good for running production-grade services for low costs.\u003C/li>\n\u003Cli>Transferable skills to other hyperscalers like AWS, GCP, etc.\u003C/li>\n\u003Cli>Get to work with a Hyperscale Cloud for free.\u003C/li>\n\u003C/ul>\n\u003Ch2 id=\"what-is-a-hyperscaler\">What is a hyperscaler?\u003Ca class=\"autolink-header\" aria-hidden=\"\" tabindex=\"-1\" href=\"#what-is-a-hyperscaler\">\u003Cspan class=\"sr-only\"> permalink\u003C/span>\u003Csvg class=\"inline ml-2 hover:text-neutral-500\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\u003Cpath d=\"M9.199 13.599a5.99 5.99 0 0 0 3.949 2.345 5.987 5.987 0 0 0 5.105-1.702l2.995-2.994a5.992 5.992 0 0 0 1.695-4.285 5.976 5.976 0 0 0-1.831-4.211 5.99 5.99 0 0 0-6.431-1.242 6.003 6.003 0 0 0-1.905 1.24l-1.731 1.721a.999.999 0 1 0 1.41 1.418l1.709-1.699a3.985 3.985 0 0 1 2.761-1.123 3.975 3.975 0 0 1 2.799 1.122 3.997 3.997 0 0 1 .111 5.644l-3.005 3.006a3.982 3.982 0 0 1-3.395 1.126 3.987 3.987 0 0 1-2.632-1.563A1 1 0 0 0 9.201 13.6zm5.602-3.198a5.99 5.99 0 0 0-3.949-2.345 5.987 5.987 0 0 0-5.105 1.702l-2.995 2.994a5.992 5.992 0 0 0-1.695 4.285 5.976 5.976 0 0 0 1.831 4.211 5.99 5.99 0 0 0 6.431 1.242 6.003 6.003 0 0 0 1.905-1.24l1.723-1.723a.999.999 0 1 0-1.414-1.414L9.836 19.81a3.985 3.985 0 0 1-2.761 1.123 3.975 3.975 0 0 1-2.799-1.122 3.997 3.997 0 0 1-.111-5.644l3.005-3.006a3.982 3.982 0 0 1 3.395-1.126 3.987 3.987 0 0 1 2.632 1.563 1 1 0 0 0 1.602-1.198z\">\u003C/path>\u003C/svg>\u003C/a>\u003C/h2>\n\u003Cp>In my opinion Hyperscalers are Cloud providers with more than 20+ services which include strong authentication and API access and good support for Terraform.\u003C/p>\n\u003Cp>Hyperscalers should ideally have various compute and storage options like Serverless, VMs, Containers, S3, Different Storage types like SSD, NVME, HDD, etc.\u003C/p>\n\u003Cp>Hyperscalers usually also have long term commitment discounts.\u003C/p>\n\u003Cp>Examples: AWS, Google Cloud, Azure, OVH Cloud, Oracle, etc.\u003C/p>\n\u003Ch2 id=\"oracle-free-tier-explained\">Oracle Free Tier Explained\u003Ca class=\"autolink-header\" aria-hidden=\"\" tabindex=\"-1\" href=\"#oracle-free-tier-explained\">\u003Cspan class=\"sr-only\"> permalink\u003C/span>\u003Csvg class=\"inline ml-2 hover:text-neutral-500\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\u003Cpath d=\"M9.199 13.599a5.99 5.99 0 0 0 3.949 2.345 5.987 5.987 0 0 0 5.105-1.702l2.995-2.994a5.992 5.992 0 0 0 1.695-4.285 5.976 5.976 0 0 0-1.831-4.211 5.99 5.99 0 0 0-6.431-1.242 6.003 6.003 0 0 0-1.905 1.24l-1.731 1.721a.999.999 0 1 0 1.41 1.418l1.709-1.699a3.985 3.985 0 0 1 2.761-1.123 3.975 3.975 0 0 1 2.799 1.122 3.997 3.997 0 0 1 .111 5.644l-3.005 3.006a3.982 3.982 0 0 1-3.395 1.126 3.987 3.987 0 0 1-2.632-1.563A1 1 0 0 0 9.201 13.6zm5.602-3.198a5.99 5.99 0 0 0-3.949-2.345 5.987 5.987 0 0 0-5.105 1.702l-2.995 2.994a5.992 5.992 0 0 0-1.695 4.285 5.976 5.976 0 0 0 1.831 4.211 5.99 5.99 0 0 0 6.431 1.242 6.003 6.003 0 0 0 1.905-1.24l1.723-1.723a.999.999 0 1 0-1.414-1.414L9.836 19.81a3.985 3.985 0 0 1-2.761 1.123 3.975 3.975 0 0 1-2.799-1.122 3.997 3.997 0 0 1-.111-5.644l3.005-3.006a3.982 3.982 0 0 1 3.395-1.126 3.987 3.987 0 0 1 2.632 1.563 1 1 0 0 0 1.602-1.198z\">\u003C/path>\u003C/svg>\u003C/a>\u003C/h2>\n\u003Cp>Oracle Cloud has one of the best free tiers of any cloud provider. There are two free tier types:\u003C/p>\n\u003Cul>\n\u003Cli>Always Free (free for life)\u003C/li>\n\u003Cli>Free Tier (12 months)\u003C/li>\n\u003C/ul>\n\u003Cp>The important resources to us is the Always Free Compute Resource which includes 3,000 OCPU hours and 18,000 GB hours per month (RAM) for ARM VMs and 2 AMD based compute VMs of \u003Ccode>VM.Standard.E2.1.Micro\u003C/code> shape.\u003C/p>\n\u003Cblockquote>\n\u003Cp>Choose your regions carefully in Oracle you \u003Cstrong>CANNOT\u003C/strong> add or change it later.\nAlso choose your home region carefully that is where you can create Always Free resources.\u003C/p>\n\u003C/blockquote>\n\u003Cp>You can split it up however you like, in this setup I am using 2 VMs with 6GB RAM, 1 VCPU and 1 VM with 6GB RAM and 2VCPU.\u003C/p>\n\u003Cp>So according to Oracle Price Calculator which caps the maximum number of hours per month to 720.\u003Cbr>\n4 x 720 = \u003Cstrong>2880 OCPU hours\u003C/strong>.\u003Cbr>\n8 x 3 x 720 = \u003Cstrong>17280 GB hours\u003C/strong>.\u003C/p>\n\u003Ch2 id=\"why-not-oci-kubernetes-engine-oke\">Why not OCI Kubernetes Engine (OKE)?\u003Ca class=\"autolink-header\" aria-hidden=\"\" tabindex=\"-1\" href=\"#why-not-oci-kubernetes-engine-oke\">\u003Cspan class=\"sr-only\"> permalink\u003C/span>\u003Csvg class=\"inline ml-2 hover:text-neutral-500\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\u003Cpath d=\"M9.199 13.599a5.99 5.99 0 0 0 3.949 2.345 5.987 5.987 0 0 0 5.105-1.702l2.995-2.994a5.992 5.992 0 0 0 1.695-4.285 5.976 5.976 0 0 0-1.831-4.211 5.99 5.99 0 0 0-6.431-1.242 6.003 6.003 0 0 0-1.905 1.24l-1.731 1.721a.999.999 0 1 0 1.41 1.418l1.709-1.699a3.985 3.985 0 0 1 2.761-1.123 3.975 3.975 0 0 1 2.799 1.122 3.997 3.997 0 0 1 .111 5.644l-3.005 3.006a3.982 3.982 0 0 1-3.395 1.126 3.987 3.987 0 0 1-2.632-1.563A1 1 0 0 0 9.201 13.6zm5.602-3.198a5.99 5.99 0 0 0-3.949-2.345 5.987 5.987 0 0 0-5.105 1.702l-2.995 2.994a5.992 5.992 0 0 0-1.695 4.285 5.976 5.976 0 0 0 1.831 4.211 5.99 5.99 0 0 0 6.431 1.242 6.003 6.003 0 0 0 1.905-1.24l1.723-1.723a.999.999 0 1 0-1.414-1.414L9.836 19.81a3.985 3.985 0 0 1-2.761 1.123 3.975 3.975 0 0 1-2.799-1.122 3.997 3.997 0 0 1-.111-5.644l3.005-3.006a3.982 3.982 0 0 1 3.395-1.126 3.987 3.987 0 0 1 2.632 1.563 1 1 0 0 0 1.602-1.198z\">\u003C/path>\u003C/svg>\u003C/a>\u003C/h2>\n\u003Cp>This is a good question whenever we use a cloud provider we should always try to stick to their managed services, but I found upgrading with Talos Linux better because you can upgrade the existing node easily without deleting an existing node.\u003C/p>\n\u003Cp>OKE managed nodes was using Oracle Linux which was eating up more RAM.\u003C/p>\n\u003Cp>Canât customize node specs using OKE -> less flexiable.\u003C/p>\n\u003Ch2 id=\"why-talos-linux\">Why Talos Linux?\u003Ca class=\"autolink-header\" aria-hidden=\"\" tabindex=\"-1\" href=\"#why-talos-linux\">\u003Cspan class=\"sr-only\"> permalink\u003C/span>\u003Csvg class=\"inline ml-2 hover:text-neutral-500\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\u003Cpath d=\"M9.199 13.599a5.99 5.99 0 0 0 3.949 2.345 5.987 5.987 0 0 0 5.105-1.702l2.995-2.994a5.992 5.992 0 0 0 1.695-4.285 5.976 5.976 0 0 0-1.831-4.211 5.99 5.99 0 0 0-6.431-1.242 6.003 6.003 0 0 0-1.905 1.24l-1.731 1.721a.999.999 0 1 0 1.41 1.418l1.709-1.699a3.985 3.985 0 0 1 2.761-1.123 3.975 3.975 0 0 1 2.799 1.122 3.997 3.997 0 0 1 .111 5.644l-3.005 3.006a3.982 3.982 0 0 1-3.395 1.126 3.987 3.987 0 0 1-2.632-1.563A1 1 0 0 0 9.201 13.6zm5.602-3.198a5.99 5.99 0 0 0-3.949-2.345 5.987 5.987 0 0 0-5.105 1.702l-2.995 2.994a5.992 5.992 0 0 0-1.695 4.285 5.976 5.976 0 0 0 1.831 4.211 5.99 5.99 0 0 0 6.431 1.242 6.003 6.003 0 0 0 1.905-1.24l1.723-1.723a.999.999 0 1 0-1.414-1.414L9.836 19.81a3.985 3.985 0 0 1-2.761 1.123 3.975 3.975 0 0 1-2.799-1.122 3.997 3.997 0 0 1-.111-5.644l3.005-3.006a3.982 3.982 0 0 1 3.395-1.126 3.987 3.987 0 0 1 2.632 1.563 1 1 0 0 0 1.602-1.198z\">\u003C/path>\u003C/svg>\u003C/a>\u003C/h2>\n\u003Cul>\n\u003Cli>Truly immutable, hardened by default (i.e no ssh).\u003C/li>\n\u003Cli>Built for Kubernetes, no need to manage OS dependencies.\u003C/li>\n\u003Cli>Supports most cloud providers and bare metal workloads.\u003C/li>\n\u003Cli>Easy Kubernetes upgrades.\u003C/li>\n\u003Cli>Infrastructure as Code.\u003C/li>\n\u003C/ul>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"hcl\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">data\u003C/span>\u003Cspan style=\"color:#79B8FF\"> \"talos_machine_configuration\"\u003C/span>\u003Cspan style=\"color:#79B8FF\"> \"this\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  cluster_name\u003C/span>\u003Cspan style=\"color:#F97583\">     =\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> var\u003C/span>\u003Cspan style=\"color:#F97583\">.\u003C/span>\u003Cspan style=\"color:#E1E4E8\">cluster_name\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  machine_type\u003C/span>\u003Cspan style=\"color:#F97583\">     =\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \"controlplane\"\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  cluster_endpoint\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \"https://\u003C/span>\u003Cspan style=\"color:#F97583\">${\u003C/span>\u003Cspan style=\"color:#E1E4E8\">local\u003C/span>\u003Cspan style=\"color:#F97583\">.\u003C/span>\u003Cspan style=\"color:#E1E4E8\">endpoint\u003C/span>\u003Cspan style=\"color:#F97583\">}\u003C/span>\u003Cspan style=\"color:#9ECBFF\">:6443\"\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  machine_secrets\u003C/span>\u003Cspan style=\"color:#F97583\">  =\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> talos_machine_secrets\u003C/span>\u003Cspan style=\"color:#F97583\">.\u003C/span>\u003Cspan style=\"color:#E1E4E8\">this\u003C/span>\u003Cspan style=\"color:#F97583\">.\u003C/span>\u003Cspan style=\"color:#E1E4E8\">machine_secrets\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  config_patches\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> [\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#79B8FF\">    yamlencode\u003C/span>\u003Cspan style=\"color:#E1E4E8\">({\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">      machine \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        certSANs \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> [local.endpoint]\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        time \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">          servers \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> [\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"169.254.169.254\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">]\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        sysctls \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#9ECBFF\">          \"vm.nr_hugepages\"\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#79B8FF\"> 1024\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        kernel \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">          modules \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> [{ name \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \"nvme-tcp\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> }, { name \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \"vfio_pci\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> }]\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        kubelet \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">          extraArgs \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#9ECBFF\">            \"rotate-server-certificates\"\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#79B8FF\"> true\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">          }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">          extraMounts \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> [\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">            {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">              destination \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \"/var/lib/longhorn\"\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">              type        \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \"bind\"\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">              source      \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \"/var/lib/longhorn\"\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">              options     \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> [\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"bind\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"rshared\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"rw\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">]\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">            }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">          ]\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">      }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">      cluster \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        allowSchedulingOnControlPlanes \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#79B8FF\"> true\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        extraManifests \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> [\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#9ECBFF\">          \"https://raw.githubusercontent.com/alex1989hu/kubelet-serving-cert-approver/main/deploy/standalone-install.yaml\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#9ECBFF\">          \"https://github.com/kubernetes-sigs/metrics-server/releases/latest/download/components.yaml\"\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        ]\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        apiServer \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">          certSANs \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> [local.endpoint]\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">        }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">      }\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    })\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  ]\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch2 id=\"architecture-diagram\">Architecture Diagram\u003Ca class=\"autolink-header\" aria-hidden=\"\" tabindex=\"-1\" href=\"#architecture-diagram\">\u003Cspan class=\"sr-only\"> permalink\u003C/span>\u003Csvg class=\"inline ml-2 hover:text-neutral-500\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\u003Cpath d=\"M9.199 13.599a5.99 5.99 0 0 0 3.949 2.345 5.987 5.987 0 0 0 5.105-1.702l2.995-2.994a5.992 5.992 0 0 0 1.695-4.285 5.976 5.976 0 0 0-1.831-4.211 5.99 5.99 0 0 0-6.431-1.242 6.003 6.003 0 0 0-1.905 1.24l-1.731 1.721a.999.999 0 1 0 1.41 1.418l1.709-1.699a3.985 3.985 0 0 1 2.761-1.123 3.975 3.975 0 0 1 2.799 1.122 3.997 3.997 0 0 1 .111 5.644l-3.005 3.006a3.982 3.982 0 0 1-3.395 1.126 3.987 3.987 0 0 1-2.632-1.563A1 1 0 0 0 9.201 13.6zm5.602-3.198a5.99 5.99 0 0 0-3.949-2.345 5.987 5.987 0 0 0-5.105 1.702l-2.995 2.994a5.992 5.992 0 0 0-1.695 4.285 5.976 5.976 0 0 0 1.831 4.211 5.99 5.99 0 0 0 6.431 1.242 6.003 6.003 0 0 0 1.905-1.24l1.723-1.723a.999.999 0 1 0-1.414-1.414L9.836 19.81a3.985 3.985 0 0 1-2.761 1.123 3.975 3.975 0 0 1-2.799-1.122 3.997 3.997 0 0 1-.111-5.644l3.005-3.006a3.982 3.982 0 0 1 3.395-1.126 3.987 3.987 0 0 1 2.632 1.563 1 1 0 0 0 1.602-1.198z\">\u003C/path>\u003C/svg>\u003C/a>\u003C/h2>\n\u003Cp>\u003Cimg __ASTRO_IMAGE_=\"{&#x22;src&#x22;:&#x22;../../images/diagram-export-6-12-2025-12_40_28-PM.png&#x22;,&#x22;alt&#x22;:&#x22;&#x22;,&#x22;index&#x22;:0}\">\u003C/p>\n\u003Cp>All Load Balancers are Layer 4 because Layer 7 Load Balancers cost a lot. Only 443 and 80 ports are exposed publicly to the internet. The source code can be found on my GitHub linked below.\u003C/p>\n\u003Ch2 id=\"longhorn\">Longhorn\u003Ca class=\"autolink-header\" aria-hidden=\"\" tabindex=\"-1\" href=\"#longhorn\">\u003Cspan class=\"sr-only\"> permalink\u003C/span>\u003Csvg class=\"inline ml-2 hover:text-neutral-500\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\u003Cpath d=\"M9.199 13.599a5.99 5.99 0 0 0 3.949 2.345 5.987 5.987 0 0 0 5.105-1.702l2.995-2.994a5.992 5.992 0 0 0 1.695-4.285 5.976 5.976 0 0 0-1.831-4.211 5.99 5.99 0 0 0-6.431-1.242 6.003 6.003 0 0 0-1.905 1.24l-1.731 1.721a.999.999 0 1 0 1.41 1.418l1.709-1.699a3.985 3.985 0 0 1 2.761-1.123 3.975 3.975 0 0 1 2.799 1.122 3.997 3.997 0 0 1 .111 5.644l-3.005 3.006a3.982 3.982 0 0 1-3.395 1.126 3.987 3.987 0 0 1-2.632-1.563A1 1 0 0 0 9.201 13.6zm5.602-3.198a5.99 5.99 0 0 0-3.949-2.345 5.987 5.987 0 0 0-5.105 1.702l-2.995 2.994a5.992 5.992 0 0 0-1.695 4.285 5.976 5.976 0 0 0 1.831 4.211 5.99 5.99 0 0 0 6.431 1.242 6.003 6.003 0 0 0 1.905-1.24l1.723-1.723a.999.999 0 1 0-1.414-1.414L9.836 19.81a3.985 3.985 0 0 1-2.761 1.123 3.975 3.975 0 0 1-2.799-1.122 3.997 3.997 0 0 1-.111-5.644l3.005-3.006a3.982 3.982 0 0 1 3.395-1.126 3.987 3.987 0 0 1 2.632 1.563 1 1 0 0 0 1.602-1.198z\">\u003C/path>\u003C/svg>\u003C/a>\u003C/h2>\n\u003Ch2 id=\"upgrading-kubernetes\">Upgrading Kubernetes\u003Ca class=\"autolink-header\" aria-hidden=\"\" tabindex=\"-1\" href=\"#upgrading-kubernetes\">\u003Cspan class=\"sr-only\"> permalink\u003C/span>\u003Csvg class=\"inline ml-2 hover:text-neutral-500\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\u003Cpath d=\"M9.199 13.599a5.99 5.99 0 0 0 3.949 2.345 5.987 5.987 0 0 0 5.105-1.702l2.995-2.994a5.992 5.992 0 0 0 1.695-4.285 5.976 5.976 0 0 0-1.831-4.211 5.99 5.99 0 0 0-6.431-1.242 6.003 6.003 0 0 0-1.905 1.24l-1.731 1.721a.999.999 0 1 0 1.41 1.418l1.709-1.699a3.985 3.985 0 0 1 2.761-1.123 3.975 3.975 0 0 1 2.799 1.122 3.997 3.997 0 0 1 .111 5.644l-3.005 3.006a3.982 3.982 0 0 1-3.395 1.126 3.987 3.987 0 0 1-2.632-1.563A1 1 0 0 0 9.201 13.6zm5.602-3.198a5.99 5.99 0 0 0-3.949-2.345 5.987 5.987 0 0 0-5.105 1.702l-2.995 2.994a5.992 5.992 0 0 0-1.695 4.285 5.976 5.976 0 0 0 1.831 4.211 5.99 5.99 0 0 0 6.431 1.242 6.003 6.003 0 0 0 1.905-1.24l1.723-1.723a.999.999 0 1 0-1.414-1.414L9.836 19.81a3.985 3.985 0 0 1-2.761 1.123 3.975 3.975 0 0 1-2.799-1.122 3.997 3.997 0 0 1-.111-5.644l3.005-3.006a3.982 3.982 0 0 1 3.395-1.126 3.987 3.987 0 0 1 2.632 1.563 1 1 0 0 0 1.602-1.198z\">\u003C/path>\u003C/svg>\u003C/a>\u003C/h2>\n\u003Cp>upgrades\u003C/p>\n\u003Ch2 id=\"references\">References\u003Ca class=\"autolink-header\" aria-hidden=\"\" tabindex=\"-1\" href=\"#references\">\u003Cspan class=\"sr-only\"> permalink\u003C/span>\u003Csvg class=\"inline ml-2 hover:text-neutral-500\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\u003Cpath d=\"M9.199 13.599a5.99 5.99 0 0 0 3.949 2.345 5.987 5.987 0 0 0 5.105-1.702l2.995-2.994a5.992 5.992 0 0 0 1.695-4.285 5.976 5.976 0 0 0-1.831-4.211 5.99 5.99 0 0 0-6.431-1.242 6.003 6.003 0 0 0-1.905 1.24l-1.731 1.721a.999.999 0 1 0 1.41 1.418l1.709-1.699a3.985 3.985 0 0 1 2.761-1.123 3.975 3.975 0 0 1 2.799 1.122 3.997 3.997 0 0 1 .111 5.644l-3.005 3.006a3.982 3.982 0 0 1-3.395 1.126 3.987 3.987 0 0 1-2.632-1.563A1 1 0 0 0 9.201 13.6zm5.602-3.198a5.99 5.99 0 0 0-3.949-2.345 5.987 5.987 0 0 0-5.105 1.702l-2.995 2.994a5.992 5.992 0 0 0-1.695 4.285 5.976 5.976 0 0 0 1.831 4.211 5.99 5.99 0 0 0 6.431 1.242 6.003 6.003 0 0 0 1.905-1.24l1.723-1.723a.999.999 0 1 0-1.414-1.414L9.836 19.81a3.985 3.985 0 0 1-2.761 1.123 3.975 3.975 0 0 1-2.799-1.122 3.997 3.997 0 0 1-.111-5.644l3.005-3.006a3.982 3.982 0 0 1 3.395-1.126 3.987 3.987 0 0 1 2.632 1.563 1 1 0 0 0 1.602-1.198z\">\u003C/path>\u003C/svg>\u003C/a>\u003C/h2>\n\u003Cp>\u003Ca href=\"https://github.com/navaneeth-dev/public-gitops/tree/main/infrastructure\">github.com/navaneeth-dev/public-gitops/\u003C/a>\u003C/p>",{"headings":129,"localImagePaths":158,"remoteImagePaths":159,"frontmatter":160,"imagePaths":163},[130,131,134,137,140,143,146,149,152,155],{"depth":56,"slug":57,"text":58},{"depth":56,"slug":132,"text":133},"why-i-choose-oracle-cloud","Why I choose Oracle Cloud?",{"depth":56,"slug":135,"text":136},"what-is-a-hyperscaler","What is a hyperscaler?",{"depth":56,"slug":138,"text":139},"oracle-free-tier-explained","Oracle Free Tier Explained",{"depth":56,"slug":141,"text":142},"why-not-oci-kubernetes-engine-oke","Why not OCI Kubernetes Engine (OKE)?",{"depth":56,"slug":144,"text":145},"why-talos-linux","Why Talos Linux?",{"depth":56,"slug":147,"text":148},"architecture-diagram","Architecture Diagram",{"depth":56,"slug":150,"text":151},"longhorn","Longhorn",{"depth":56,"slug":153,"text":154},"upgrading-kubernetes","Upgrading Kubernetes",{"depth":56,"slug":156,"text":157},"references","References",[124],[],{"title":112,"tags":161,"pubDate":162,"image":115,"description":113,"author":23,"isDraft":22},[117,118,119,120],"May 6 2025",[124],"free-production-kubernetes-cluster.md","why-ansible-sucks",{"id":165,"data":167,"body":175,"filePath":176,"digest":177,"rendered":178,"legacyId":188},{"title":168,"description":169,"pubDate":170,"image":171,"tags":172,"isDraft":174,"author":23},"Why Ansible Sucks","Hello",["Date","2025-06-13T18:30:00.000Z"],"/sveltekit.png",[117,173],"ansible",true,"not declarative\nslow for high german servers\ndoesn't cleanup","src/content/blog/why-ansible-sucks.md","a2d382fe7bee0288",{"html":179,"metadata":180},"\u003Cp>not declarative\nslow for high german servers\ndoesnât cleanup\u003C/p>",{"headings":181,"localImagePaths":182,"remoteImagePaths":183,"frontmatter":184,"imagePaths":187},[],[],[],{"title":168,"tags":185,"pubDate":186,"image":171,"description":169,"isDraft":174,"author":23},[117,173],"Jun 14 2025",[],"why-ansible-sucks.md"]