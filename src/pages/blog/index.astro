---
import BaseHead from "../../components/BaseHead.astro";
import Header from "../../components/Header.astro";
import Footer from "../../components/Footer.astro";
import { SITE_TITLE, SITE_DESCRIPTION } from "../../config";
import { Image } from "astro:assets";
import { getCollection } from "astro:content";
import { Calendar, Tags } from "lucide-react";

const posts = await getCollection("blog");
posts.sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf());
---

<!doctype html>
<html lang="en">
  <head>
    <BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
  </head>
  <body>
    <Header />
    <main class="pt-6 pb-12">
      <div class="mb-6 container mx-auto px-12">
        <h1 class="text-3xl font-bold text-primary">Posts</h1>
        <ul class="grid grid-flow-row auto-rows-[1fr] grid-row gap-6 mt-6">
          {
            posts.map((post) => (
              <li class="border border-neutral-400 rounded-lg">
                <div class="bg-neutral-50 rounded-lg flex flex-col lg:flex-row">
                  <div class="w-full max-h-[250px]">
                    <Image
                      width={560}
                      height={280}
                      src={
                        post.data.image ? post.data.image : "/placeholder.png"
                      }
                      alt={post.data.title}
                      class="h-full w-full object-fill rounded-t-lg object-cover rounded-lg border-r border-neutral-400"
                    />
                  </div>
                  <div class="p-4 flex-4">
                    <time
                      datetime={post.data.pubDate.toString()}
                      class="text-sm text-gray-700 flex items-center gap-1"
                    >
                      <Calendar />
                      {new Date(post.data.pubDate).toLocaleDateString("en-us", {
                        year: "numeric",
                        month: "short",
                        day: "numeric",
                      })}
                    </time>
                    <a
                      href={"/blog/" + post.slug}
                      class="block text-xl font-bold mb-2 text-primary hover:underline"
                    >
                      {post.data.title}
                    </a>
                    <div class="flex gap-2 flex-wrap">
                      {post.data.tags &&
                        post.data.tags.map((tag: string) => (
                          <a
                            class="flex items-center gap-1 border border-neutral-700 uppercase text-sm text-neutral-700 hover:bg-neutral-200 px-2"
                            href={"/tag/" + tag}
                          >
                            <Tags /> {tag}
                          </a>
                        ))}
                    </div>
                    <p class="mt-2 text-neutral-700 w-full overflow-elipsis">
                      {post.data.description}
                    </p>
                  </div>
                </div>
              </li>
            ))
          }
        </ul>
      </div>
    </main>
    <Footer />
  </body>
</html>
