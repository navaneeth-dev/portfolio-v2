---
import BaseHead from "../components/BaseHead.astro";
import Header from "../components/Header.astro";
import Footer from "../components/Footer.astro";
import { SITE_TITLE, SITE_DESCRIPTION } from "../config";

// Use Astro.glob() to fetch all posts, and then sort them by date.
const posts = (await Astro.glob("./blog/*.{md,mdx}")).sort(
  (a, b) =>
    new Date(b.frontmatter.pubDate).valueOf() -
    new Date(a.frontmatter.pubDate).valueOf()
);
---

<!DOCTYPE html>
<html lang="en">
  <head>
    <BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
  </head>
  <body>
    <Header />
    <main class="py-6">
      <div class="mb-6 container mx-auto px-12 max-w-4xl">
        <h1 class="text-3xl font-bold text-primary">Posts</h1>
        <ul class="grid grid-flow-row auto-rows-[1fr] grid-row gap-6 mt-6">
          {
            posts.map((post) => (
              <li class="border border-neutral-400 rounded-lg hover:scale-105 transition-transform">
                <a
                  href={post.url}
                  class="bg-white rounded-lg flex flex-col md:grid md:grid-cols-[30%_70%] gap-3 h-full"
                >
                  <div class="w-full h-[173px] md:h-full relative">
                    <img
                      src={
                        post.frontmatter.image
                          ? post.frontmatter.image
                          : "/placeholder.png"
                      }
                      alt=""
                      class="size w-full h-full rounded-t-lg object-cover md:rounded-l-lg md:rounded-none absolute inset-0"
                    />
                  </div>
                  <div class="p-2">
                    <time
                      datetime={post.frontmatter.pubDate}
                      class="text-sm text-gray-700"
                    >
                      {new Date(post.frontmatter.pubDate).toLocaleDateString(
                        "en-us",
                        {
                          year: "numeric",
                          month: "short",
                          day: "numeric",
                        }
                      )}
                    </time>
                    <h2 class="text-xl font-bold mb-2 text-primary">
                      {post.frontmatter.title}
                    </h2>
                    <div class="flex gap-2">
                      {post.frontmatter.tags &&
                        post.frontmatter.tags.map((tag: string) => (
                          <span class="border border-neutral-700 uppercase text-sm text-neutral-700 px-2">
                            {tag}
                          </span>
                        ))}
                    </div>
                    <p class="mt-2 text-neutral-700">
                      {post.frontmatter.description}
                    </p>
                  </div>
                </a>
              </li>
            ))
          }
        </ul>
      </div>
    </main>
    <Footer />
  </body>
</html>
