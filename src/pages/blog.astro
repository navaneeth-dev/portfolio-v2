---
import BaseHead from "../components/BaseHead.astro";
import Header from "../components/Header.astro";
import Footer from "../components/Footer.astro";
import { SITE_TITLE, SITE_DESCRIPTION } from "../config";
import { Image } from "@astrojs/image/components";

// Use Astro.glob() to fetch all posts, and then sort them by date.
const posts = (await Astro.glob("./blog/*.{md,mdx}")).sort(
  (a, b) =>
    new Date(b.frontmatter.pubDate).valueOf() -
    new Date(a.frontmatter.pubDate).valueOf()
);
---

<!DOCTYPE html>
<html lang="en">
  <head>
    <BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
  </head>
  <body>
    <Header />
    <main class="pt-6 pb-12">
      <div class="mb-6 container mx-auto px-12 max-w-4xl">
        <h1 class="text-3xl font-bold text-primary">Posts</h1>
        <ul class="grid grid-flow-row auto-rows-[1fr] grid-row gap-6 mt-6">
          {
            posts.map((post) => (
              <li class="border border-neutral-400 rounded-lg">
                <div class="bg-white rounded-lg flex flex-col md:grid md:grid-cols-[1fr,3fr] h-full gap-3 max-w-full">
                  <div class="w-full h-[173px] md:h-full relative">
                    <Image
                      width={256}
                      height={480}
                      src={
                        post.frontmatter.image
                          ? post.frontmatter.image
                          : "/placeholder.png"
                      }
                      alt={post.frontmatter.title}
                      class="size w-full h-full rounded-t-lg object-cover md:rounded-l-lg md:rounded-none absolute inset-0 border-r border-neutral-400"
                    />
                  </div>
                  <div class="p-2">
                    <time
                      datetime={post.frontmatter.pubDate}
                      class="text-sm text-gray-700"
                    >
                      {new Date(post.frontmatter.pubDate).toLocaleDateString(
                        "en-us",
                        {
                          year: "numeric",
                          month: "short",
                          day: "numeric",
                        }
                      )}
                    </time>
                    <a
                      href={post.url}
                      class="block text-xl font-bold mb-2 text-primary hover:underline"
                    >
                      {post.frontmatter.title}
                    </a>
                    <div class="flex gap-2 flex-wrap">
                      {post.frontmatter.tags &&
                        post.frontmatter.tags.map((tag: string) => (
                          <a
                            class="border border-neutral-700 uppercase text-sm text-neutral-700 hover:bg-neutral-100 px-2"
                            href={"/tag/" + tag}
                          >
                            {tag}
                          </a>
                        ))}
                    </div>
                    <p class="mt-2 text-neutral-700 max-w-full">
                      {post.frontmatter.description}
                    </p>
                  </div>
                </div>
              </li>
            ))
          }
        </ul>
      </div>
    </main>
    <Footer />
  </body>
</html>
